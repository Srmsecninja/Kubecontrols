{
  "version": 4,
  "terraform_version": "1.9.2",
  "serial": 603,
  "lineage": "9ddaa339-0170-d9a1-872c-13bfeea0e587",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": true
              }
            ],
            "arn": "arn:aws:eks:us-east-1:219872127195:cluster/myOPAproject_v02",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQTNNM1JCQWRmczR3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBM01UWXlNelU1TVRsYUZ3MHpOREEzTVRVd01EQTBNVGxhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM1bXZSZ0VMV1A5cVdSTkRhdWEwYllGRWRxdWZPOCs5QWhLY2dqNUM3bUFrUzNhM3ZRcnJkWm5BUWMKekxZNzE0QmhVZ1MzL1BaTTFVUFhLV25lRWIxL0JoeGd1KzQwN04xUDFyVnB6bGJPVUNuUGdLUXVla0JUUmJBQQpJTVM4OUVoWUczWEc2aFFsQVkwUnR2TVplT2ZzRjJuWnJqZk56dy9WTDV4N09EaXJFZVRDRGx0ZkVCeWRRanVIClg4SURPRHFkUndMN25HU0kwaENab0h1TmE4K1h6Z20yMUhVang4TWpWVVdweVRrY3RqSFpPSWowbjVOa2JzVnAKZnR3V3JtTlFJVXZQaFdLRHJOWWx6STFrR2p4TUxZYTZvVXE3YTh2cVJaQVJMMkY4MmNKamdoaFh6bm00NFBKMApjR0prWFVLYUM2WFFyc2RBTzBhSk8wUzlrdDh2QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTdjcyM2dibTdzYVVoYzVsUWprYXNnTUxYanRUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQi9ld0NSbmRPcgp1RFZ4V1JzRlo3ZjVqZjdEcWtTQUVXZXovU2ZsdURzMk5GOU9tQndzbXk4TFZSTHIxYnQxRkFsbHIrbG91VmdWCldsRHZwMmM0NndtTjg2cHdVOWVZZkp0N3JXMGFIV2x1MExNaFNhQmZuU0tsUWJLM2JNQkV4QlU3REp2VTJ4UTgKU0szSDN0SUNGTnpLaUh1NzFOc3RvZDdqVW1RWlRvS2ZzTVRuMjdscnlqVGFmRGJSRnQxdEtOTHR1ZkpULzZQYwowZXl4MXcyR0tBSnU5U09zekFsMXVlN1p4ejdwZnp2cG1QVlN3VjE5N0N3ZjMwR0k5SWdZVUVRQ0F1Y2pIUW9aCnFMa0ZFL1pVazJ2ZWExZklVa0N5R1RkamNGVCtLL0t5WmdMVkpXZjdTR1pwdDlqVG93dnZoRFRFQnJQTDF2RXAKWC9ONEVYSWYvcEZOCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-07-16 23:59:24.943 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "endpoint": "https://2DD8DFF6A43AE80D9E069B344F20C889.sk1.us-east-1.eks.amazonaws.com",
            "id": "myOPAproject_v02",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/2DD8DFF6A43AE80D9E069B344F20C889"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "10.100.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "myOPAproject_v02",
            "outpost_config": [],
            "platform_version": "eks.10",
            "role_arn": "arn:aws:iam::219872127195:role/eksrole",
            "status": "ACTIVE",
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "version": "1.29",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-08d8e79c070d5f5fb",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0f25af21daaa0b2b9"
                ],
                "subnet_ids": [
                  "subnet-2e3a8c75",
                  "subnet-c0335f89"
                ],
                "vpc_id": "vpc-2f1fee49"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "gatekeeper_constraints",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": "constraint_denyadmincapabilities.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: constraints.gatekeeper.sh/v1beta1\r\nkind: K8sDenyCapabilities\r\nmetadata:\r\n  name: k8sdenycapabilities\r\nspec:\r\n  match:\r\n    kinds:\r\n      - apiGroups: [\"\"]\r\n        kinds: [\"Pod\"]\r\n",
            "content_base64": "YXBpVmVyc2lvbjogY29uc3RyYWludHMuZ2F0ZWtlZXBlci5zaC92MWJldGExDQpraW5kOiBLOHNEZW55Q2FwYWJpbGl0aWVzDQptZXRhZGF0YToNCiAgbmFtZTogazhzZGVueWNhcGFiaWxpdGllcw0Kc3BlYzoNCiAgbWF0Y2g6DQogICAga2luZHM6DQogICAgICAtIGFwaUdyb3VwczogWyIiXQ0KICAgICAgICBraW5kczogWyJQb2QiXQ0K",
            "content_base64sha256": "XHoS1K9mu2wdPNekLkYuLnhjn5paI2TPVk78g+hLoBY=",
            "content_base64sha512": "5Wdi6Jsd0wnJBfDlLuGfsmtHe3ATsE1dNa2sCtr0ePZBcpkqGlq8zXTwm6bZCnVe4txoiEnr31z5DSHkapTzNg==",
            "content_md5": "e812ad2e8c0942a8758613d91c7007d3",
            "content_sha1": "bb7f88f596eeb56706f36aec738900d6e1ed6ca3",
            "content_sha256": "5c7a12d4af66bb6c1d3cd7a42e462e2e78639f9a5a2364cf564efc83e84ba016",
            "content_sha512": "e56762e89b1dd309c905f0e52ee19fb26b477b7013b04d5d35adac0adaf478f64172992a1a5abccd74f09ba6d90a755ee2dc688849ebdf5cf90d21e46a94f336",
            "filename": "./gatekeeper_policies_constraints/constraint_denyadmincapabilities.yaml",
            "id": "bb7f88f596eeb56706f36aec738900d6e1ed6ca3"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_file_denyrootaccess.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: constraints.gatekeeper.sh/v1beta1\r\nkind: K8sDenyRootUser\r\nmetadata:\r\n  name: deny-root-user\r\nspec:\r\n  match:\r\n    kinds:\r\n      - apiGroups: [\"\"]\r\n        kinds: [\"Pod\"]\r\n",
            "content_base64": "YXBpVmVyc2lvbjogY29uc3RyYWludHMuZ2F0ZWtlZXBlci5zaC92MWJldGExDQpraW5kOiBLOHNEZW55Um9vdFVzZXINCm1ldGFkYXRhOg0KICBuYW1lOiBkZW55LXJvb3QtdXNlcg0Kc3BlYzoNCiAgbWF0Y2g6DQogICAga2luZHM6DQogICAgICAtIGFwaUdyb3VwczogWyIiXQ0KICAgICAgICBraW5kczogWyJQb2QiXQ0K",
            "content_base64sha256": "jIjm6U7uxtRPcwS2EEVkU/OmsaahL/kafFBTKrtnq1g=",
            "content_base64sha512": "zv8JSF3U5+TAgYri4Kxb9Ac00KE45WfMzIjyk9rGhjcG7UVC1pO11nnsP5NW9crolJp0jXZIm7Ed1xKMtoTrSA==",
            "content_md5": "07dfa2e091a846991e01db56b06c9427",
            "content_sha1": "4d11cb4b68fcd278022df063a4bc4197978526e4",
            "content_sha256": "8c88e6e94eeec6d44f7304b610456453f3a6b1a6a12ff91a7c50532abb67ab58",
            "content_sha512": "ceff09485dd4e7e4c0818ae2e0ac5bf40734d0a138e567cccc88f293dac6863706ed4542d693b5d679ec3f9356f5cae8949a748d76489bb11dd7128cb684eb48",
            "filename": "./gatekeeper_policies_constraints/constraint_file_denyrootaccess.yaml",
            "id": "4d11cb4b68fcd278022df063a4bc4197978526e4"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_privileged.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: constraints.gatekeeper.sh/v1beta1\r\nkind: K8sDenyHostPIDPrivileged\r\nmetadata:\r\n  name: deny-hostpid-privileged\r\nspec:\r\n  match:\r\n    kinds:\r\n      - apiGroups: [\"\"]\r\n        kinds: [\"Pod\"]\r\n",
            "content_base64": "YXBpVmVyc2lvbjogY29uc3RyYWludHMuZ2F0ZWtlZXBlci5zaC92MWJldGExDQpraW5kOiBLOHNEZW55SG9zdFBJRFByaXZpbGVnZWQNCm1ldGFkYXRhOg0KICBuYW1lOiBkZW55LWhvc3RwaWQtcHJpdmlsZWdlZA0Kc3BlYzoNCiAgbWF0Y2g6DQogICAga2luZHM6DQogICAgICAtIGFwaUdyb3VwczogWyIiXQ0KICAgICAgICBraW5kczogWyJQb2QiXQ0K",
            "content_base64sha256": "cRJJnMh3pO4zS/LGBmsMfecZ6mlGt9OeYIm5nDVAnB8=",
            "content_base64sha512": "xIzyWqlI9HBN7e1qjdddpfV04ykctNgxLrnsuAeMqPIKuIyMgKLgYf/3ctwt73oF38xfNQp1NeSRGzDeBJd08Q==",
            "content_md5": "6286ae16d1cb9dabe58576c23baa67e7",
            "content_sha1": "ffee7854e495156ba0b80a67b50e2d45fa46c9fc",
            "content_sha256": "7112499cc877a4ee334bf2c6066b0c7de719ea6946b7d39e6089b99c35409c1f",
            "content_sha512": "c48cf25aa948f4704deded6a8dd75da5f574e3291cb4d8312eb9ecb8078ca8f20ab88c8c80a2e061fff772dc2def7a05dfcc5f350a7535e4911b30de049774f1",
            "filename": "./gatekeeper_policies_constraints/constraint_privileged.yaml",
            "id": "ffee7854e495156ba0b80a67b50e2d45fa46c9fc"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_privilegeescalation.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: constraints.gatekeeper.sh/v1beta1\r\nkind: K8sDenyPrivilegeEscalation\r\nmetadata:\r\n  name: deny-privilege-escalation\r\nspec:\r\n  match:\r\n    kinds:\r\n      - apiGroups: [\"\"]\r\n        kinds: [\"Pod\"]\r\n",
            "content_base64": "YXBpVmVyc2lvbjogY29uc3RyYWludHMuZ2F0ZWtlZXBlci5zaC92MWJldGExDQpraW5kOiBLOHNEZW55UHJpdmlsZWdlRXNjYWxhdGlvbg0KbWV0YWRhdGE6DQogIG5hbWU6IGRlbnktcHJpdmlsZWdlLWVzY2FsYXRpb24NCnNwZWM6DQogIG1hdGNoOg0KICAgIGtpbmRzOg0KICAgICAgLSBhcGlHcm91cHM6IFsiIl0NCiAgICAgICAga2luZHM6IFsiUG9kIl0NCg==",
            "content_base64sha256": "sUfF0hym5zzd1+hhzV2VrYMz7hiwJdqvfHeVU5z95R8=",
            "content_base64sha512": "myXT8Yzi/C8/WnStJ+rB69Ymr1jot5i96SNYnOUlRXF53fsh5LLlJMhO8zva8nYzO8qZgbSPcz7kQMiO9iU1NA==",
            "content_md5": "1a7a32225046c0b79a7fd4b2b25222d1",
            "content_sha1": "a2186e20a1375b4a593d0ef3800b382b430ec74d",
            "content_sha256": "b147c5d21ca6e73cddd7e861cd5d95ad8333ee18b025daaf7c7795539cfde51f",
            "content_sha512": "9b25d3f18ce2fc2f3f5a74ad27eac1ebd626af58e8b798bde923589ce525457179ddfb21e4b2e524c84ef33bdaf276333bca9981b48f733ee440c88ef6253534",
            "filename": "./gatekeeper_policies_constraints/constraint_privilegeescalation.yaml",
            "id": "a2186e20a1375b4a593d0ef3800b382b430ec74d"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_readonlyrootaccess.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: constraints.gatekeeper.sh/v1beta1\r\nkind: K8sEnforceReadOnlyRootFilesystem\r\nmetadata:\r\n  name: enforce-readonly-root-filesystem\r\nspec:\r\n  match:\r\n    kinds:\r\n      - apiGroups: [\"\"]\r\n        kinds: [\"Pod\"]\r\n",
            "content_base64": "YXBpVmVyc2lvbjogY29uc3RyYWludHMuZ2F0ZWtlZXBlci5zaC92MWJldGExDQpraW5kOiBLOHNFbmZvcmNlUmVhZE9ubHlSb290RmlsZXN5c3RlbQ0KbWV0YWRhdGE6DQogIG5hbWU6IGVuZm9yY2UtcmVhZG9ubHktcm9vdC1maWxlc3lzdGVtDQpzcGVjOg0KICBtYXRjaDoNCiAgICBraW5kczoNCiAgICAgIC0gYXBpR3JvdXBzOiBbIiJdDQogICAgICAgIGtpbmRzOiBbIlBvZCJdDQo=",
            "content_base64sha256": "FcdTTy6Mwr6ciOKMeZiMRE+CZxQGBIdZHSI4qEEaIW8=",
            "content_base64sha512": "usFo0TPz4H9tD4fYZWUUvvS1tg8FOiJK8mHW6kiRBI10ufmEu5dOTTh5EgvBqv6s8bwNi97OY2OG2G0oVKtCrw==",
            "content_md5": "9965f99a1cfb8ee44ea6f5d9aa5fa9e8",
            "content_sha1": "0f58cea977f417c0e317b28d960061342a1d4267",
            "content_sha256": "15c7534f2e8cc2be9c88e28c79988c444f826714060487591d2238a8411a216f",
            "content_sha512": "bac168d133f3e07f6d0f87d8656514bef4b5b60f053a224af261d6ea4891048d74b9f984bb974e4d3879120bc1aafeacf1bc0d8bdece636386d86d2854ab42af",
            "filename": "./gatekeeper_policies_constraints/constraint_readonlyrootaccess.yaml",
            "id": "0f58cea977f417c0e317b28d960061342a1d4267"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_seccomp.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: constraints.gatekeeper.sh/v1beta1\r\nkind: K8sSeccomp\r\nmetadata:\r\n  name: seccomp-enabled\r\nspec:\r\n  match:\r\n    kinds:\r\n      - apiGroups: [\"\"]\r\n        kinds: [\"Pod\"]\r\n",
            "content_base64": "YXBpVmVyc2lvbjogY29uc3RyYWludHMuZ2F0ZWtlZXBlci5zaC92MWJldGExDQpraW5kOiBLOHNTZWNjb21wDQptZXRhZGF0YToNCiAgbmFtZTogc2VjY29tcC1lbmFibGVkDQpzcGVjOg0KICBtYXRjaDoNCiAgICBraW5kczoNCiAgICAgIC0gYXBpR3JvdXBzOiBbIiJdDQogICAgICAgIGtpbmRzOiBbIlBvZCJdDQo=",
            "content_base64sha256": "K1n/vCT4qMBwNzpYRhVHW54n1ZgZz7AHI8/Ohdgv5tI=",
            "content_base64sha512": "JpVfQIbZf0plvbouz5B0e5zKuSb+IM9uBWiPwIs80bOXvinSFIUUITR0n8vgRi8kITKBgm+cWGaxLSjwkpXjvw==",
            "content_md5": "a67ad02126a0891e45a81d68419f2745",
            "content_sha1": "6270dea25f3ad62fb0c99fe34dfe308a3cc2df0d",
            "content_sha256": "2b59ffbc24f8a8c070373a584615475b9e27d59819cfb00723cfce85d82fe6d2",
            "content_sha512": "26955f4086d97f4a65bdba2ecf90747b9ccab926fe20cf6e05688fc08b3cd1b397be29d21485142134749fcbe0462f24213281826f9c5866b12d28f09295e3bf",
            "filename": "./gatekeeper_policies_constraints/constraint_seccomp.yaml",
            "id": "6270dea25f3ad62fb0c99fe34dfe308a3cc2df0d"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_selinux.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: constraints.gatekeeper.sh/v1beta1\r\nkind: K8sDenySELinux\r\nmetadata:\r\n  name: deny-selinux\r\nspec:\r\n  match:\r\n    kinds:\r\n      - apiGroups: [\"\"]\r\n        kinds: [\"Pod\"]\r\n",
            "content_base64": "YXBpVmVyc2lvbjogY29uc3RyYWludHMuZ2F0ZWtlZXBlci5zaC92MWJldGExDQpraW5kOiBLOHNEZW55U0VMaW51eA0KbWV0YWRhdGE6DQogIG5hbWU6IGRlbnktc2VsaW51eA0Kc3BlYzoNCiAgbWF0Y2g6DQogICAga2luZHM6DQogICAgICAtIGFwaUdyb3VwczogWyIiXQ0KICAgICAgICBraW5kczogWyJQb2QiXQ0K",
            "content_base64sha256": "6dGj7pTvJP2k3CBtQlBCDfF+xKpPLvHfoyfQL2p+69c=",
            "content_base64sha512": "JgKP3AC7PLqr8yjxks3LQPjTrv/6Hzj6Zp4cnLq6vyEdH+4GEehy7g58hNlFYlQpgoMIxVB9Q1gopEa+Q+zNcw==",
            "content_md5": "2f16baaeacaf8d74cfa19fac94e58310",
            "content_sha1": "170f51739ffae813751db481d12f4648227db9af",
            "content_sha256": "e9d1a3ee94ef24fda4dc206d4250420df17ec4aa4f2ef1dfa327d02f6a7eebd7",
            "content_sha512": "26028fdc00bb3cbaabf328f192cdcb40f8d3aefffa1f38fa669e1c9cbababf211d1fee0611e872ee0e7c84d945625429828308c5507d435828a446be43eccd73",
            "filename": "./gatekeeper_policies_constraints/constraint_selinux.yaml",
            "id": "170f51739ffae813751db481d12f4648227db9af"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraints_defaultns.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: constraints.gatekeeper.sh/v1beta1\r\nkind: K8sDenyDefaultNamespace\r\nmetadata:\r\n  name: deny-default-namespace\r\nspec:\r\n  match:\r\n    kinds:\r\n      - apiGroups: [\"\"]\r\n        kinds: [\"*\"]\r\n",
            "content_base64": "YXBpVmVyc2lvbjogY29uc3RyYWludHMuZ2F0ZWtlZXBlci5zaC92MWJldGExDQpraW5kOiBLOHNEZW55RGVmYXVsdE5hbWVzcGFjZQ0KbWV0YWRhdGE6DQogIG5hbWU6IGRlbnktZGVmYXVsdC1uYW1lc3BhY2UNCnNwZWM6DQogIG1hdGNoOg0KICAgIGtpbmRzOg0KICAgICAgLSBhcGlHcm91cHM6IFsiIl0NCiAgICAgICAga2luZHM6IFsiKiJdDQo=",
            "content_base64sha256": "Yfe4XvYBLnRMd2I+S7fA0vXHrGde/lwCl4SAVy5KuSE=",
            "content_base64sha512": "yYtITOdpXHS0aJ2ARBd9RHtdbERYNH+77umZRh2yczk9f59n7zFl0wQalvI2eiCywXzli4jpc2c5K+eIMbRDBg==",
            "content_md5": "b6c421c76723b34fe1dc1988a325d967",
            "content_sha1": "5c57552f030b8d1c3156eb78ef5c9d08c789738a",
            "content_sha256": "61f7b85ef6012e744c77623e4bb7c0d2f5c7ac675efe5c02978480572e4ab921",
            "content_sha512": "c98b484ce7695c74b4689d8044177d447b5d6c4458347fbbeee999461db273393d7f9f67ef3165d3041a96f2367a20b2c17ce58b88e97367392be78831b44306",
            "filename": "./gatekeeper_policies_constraints/constraints_defaultns.yaml",
            "id": "5c57552f030b8d1c3156eb78ef5c9d08c789738a"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "gatekeeper_templates",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": "constraint_template-kubesecrets.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: templates.gatekeeper.sh/v1beta1\r\nkind: ConstraintTemplate\r\nmetadata:\r\n  name: k8sdisallowedsecret\r\nspec:\r\n  crd:\r\n    spec:\r\n      names:\r\n        kind: K8sDisallowedSecret\r\n  targets:\r\n    - target: admission.k8s.gatekeeper.sh\r\n      rego: |\r\n        package k8sdisallowedsecret\r\n\r\n        violation[{\"msg\": msg}] {disa\r\n          input.review.kind.kind == \"Secret\"\r\n          msg := \"Usage of Secrets is not allowed.\"\r\n        }\r\n",
            "content_base64": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQ0Ka2luZDogQ29uc3RyYWludFRlbXBsYXRlDQptZXRhZGF0YToNCiAgbmFtZTogazhzZGlzYWxsb3dlZHNlY3JldA0Kc3BlYzoNCiAgY3JkOg0KICAgIHNwZWM6DQogICAgICBuYW1lczoNCiAgICAgICAga2luZDogSzhzRGlzYWxsb3dlZFNlY3JldA0KICB0YXJnZXRzOg0KICAgIC0gdGFyZ2V0OiBhZG1pc3Npb24uazhzLmdhdGVrZWVwZXIuc2gNCiAgICAgIHJlZ286IHwNCiAgICAgICAgcGFja2FnZSBrOHNkaXNhbGxvd2Vkc2VjcmV0DQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0ge2Rpc2ENCiAgICAgICAgICBpbnB1dC5yZXZpZXcua2luZC5raW5kID09ICJTZWNyZXQiDQogICAgICAgICAgbXNnIDo9ICJVc2FnZSBvZiBTZWNyZXRzIGlzIG5vdCBhbGxvd2VkLiINCiAgICAgICAgfQ0K",
            "content_base64sha256": "BxFBk+KIhXqNlhvulcWdfTKMfBDsneKeMkpnX9TWzmk=",
            "content_base64sha512": "ZIPdhsD4MqYAZQ/pgdkwqlUmPrNQwth95qHThFAmKMudrAaGTkZBmJbHS6Qr8ARHYgGAG+mnc8oeEzSSOwIjcA==",
            "content_md5": "9877e5958360393e62e4d62c892de308",
            "content_sha1": "8172d0365ec7a94d41e13871c86409c3aaa2e4a3",
            "content_sha256": "07114193e288857a8d961bee95c59d7d328c7c10ec9de29e324a675fd4d6ce69",
            "content_sha512": "6483dd86c0f832a600650fe981d930aa55263eb350c2d87de6a1d384502628cb9dac06864e46419896c74ba42bf004476201801be9a773ca1e1334923b022370",
            "filename": "./gatekeeper_policies_constraints-templates/constraint_template-kubesecrets.yaml",
            "id": "8172d0365ec7a94d41e13871c86409c3aaa2e4a3"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_template_defaultns.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: templates.gatekeeper.sh/v1beta1\r\nkind: ConstraintTemplate\r\nmetadata:\r\n  name: k8sdenydefaultnamespace\r\nspec:\r\n  crd:\r\n    spec:\r\n      names:\r\n        kind: K8sDenyDefaultNamespace\r\n  targets:\r\n    - target: admission.k8s.gatekeeper.sh\r\n      rego: |\r\n        package k8sdenydefaultnamespace\r\n\r\n        violation[{\"msg\": msg}] {\r\n          input.review.object.metadata.namespace == \"default\"\r\n          msg := \"Creating resources in the default namespace is not allowed.\"\r\n        }\r\n",
            "content_base64": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQ0Ka2luZDogQ29uc3RyYWludFRlbXBsYXRlDQptZXRhZGF0YToNCiAgbmFtZTogazhzZGVueWRlZmF1bHRuYW1lc3BhY2UNCnNwZWM6DQogIGNyZDoNCiAgICBzcGVjOg0KICAgICAgbmFtZXM6DQogICAgICAgIGtpbmQ6IEs4c0RlbnlEZWZhdWx0TmFtZXNwYWNlDQogIHRhcmdldHM6DQogICAgLSB0YXJnZXQ6IGFkbWlzc2lvbi5rOHMuZ2F0ZWtlZXBlci5zaA0KICAgICAgcmVnbzogfA0KICAgICAgICBwYWNrYWdlIGs4c2RlbnlkZWZhdWx0bmFtZXNwYWNlDQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGlucHV0LnJldmlldy5vYmplY3QubWV0YWRhdGEubmFtZXNwYWNlID09ICJkZWZhdWx0Ig0KICAgICAgICAgIG1zZyA6PSAiQ3JlYXRpbmcgcmVzb3VyY2VzIGluIHRoZSBkZWZhdWx0IG5hbWVzcGFjZSBpcyBub3QgYWxsb3dlZC4iDQogICAgICAgIH0NCg==",
            "content_base64sha256": "4hn7wiPm7BFkDsKEx77Xj9APOT03GQzrTwrOYvKw4dw=",
            "content_base64sha512": "k+SWBqu3KAzlvrJcWRqEH+JqHC2DUJ2ZsRIH8nEWK7Ap78uNascvongVx9QWmwLLGF7slNWUNPtVcfQHWqdh9A==",
            "content_md5": "8e64a300e3bcaf727df68782cc61ae7c",
            "content_sha1": "eedbf8ebe9c16f62400816dc33b20e558113165b",
            "content_sha256": "e219fbc223e6ec11640ec284c7bed78fd00f393d37190ceb4f0ace62f2b0e1dc",
            "content_sha512": "93e49606abb7280ce5beb25c591a841fe26a1c2d83509d99b11207f271162bb029efcb8d6ac72fa27815c7d4169b02cb185eec94d59434fb5571f4075aa761f4",
            "filename": "./gatekeeper_policies_constraints-templates/constraint_template_defaultns.yaml",
            "id": "eedbf8ebe9c16f62400816dc33b20e558113165b"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_template_denyadminscapabilities.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: templates.gatekeeper.sh/v1beta1\r\nkind: ConstraintTemplate\r\nmetadata:\r\n  name: k8sdenycapabilities\r\nspec:\r\n  crd:\r\n    spec:\r\n      names:\r\n        kind: K8sDenyCapabilities\r\n  targets:\r\n    - target: admission.k8s.gatekeeper.sh\r\n      rego: |\r\n        package k8sdenycapabilities\r\n\r\n        violation[{\"msg\": msg}] {\r\n          container := input.review.object.spec.containers[_]\r\n          container.securityContext.capabilities.add[_] == \"NET_ADMIN\"\r\n          msg := sprintf(\"Capability NET_ADMIN is not allowed in container %v\", [container.name])\r\n        }\r\n\r\n        violation[{\"msg\": msg}] {\r\n          container := input.review.object.spec.containers[_]\r\n          container.securityContext.capabilities.add[_] == \"SYS_ADMIN\"\r\n          msg := sprintf(\"Capability SYS_ADMIN is not allowed in container %v\", [container.name])\r\n        }\r\n\r\n        violation[{\"msg\": msg}] {\r\n          initContainer := input.review.object.spec.initContainers[_]\r\n          initContainer.securityContext.capabilities.add[_] == \"NET_ADMIN\"\r\n          msg := sprintf(\"Capability NET_ADMIN is not allowed in init container %v\", [initContainer.name])\r\n        }\r\n\r\n        violation[{\"msg\": msg}] {\r\n          initContainer := input.review.object.spec.initContainers[_]\r\n          initContainer.securityContext.capabilities.add[_] == \"SYS_ADMIN\"\r\n          msg := sprintf(\"Capability SYS_ADMIN is not allowed in init container %v\", [initContainer.name])\r\n        }\r\n",
            "content_base64": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQ0Ka2luZDogQ29uc3RyYWludFRlbXBsYXRlDQptZXRhZGF0YToNCiAgbmFtZTogazhzZGVueWNhcGFiaWxpdGllcw0Kc3BlYzoNCiAgY3JkOg0KICAgIHNwZWM6DQogICAgICBuYW1lczoNCiAgICAgICAga2luZDogSzhzRGVueUNhcGFiaWxpdGllcw0KICB0YXJnZXRzOg0KICAgIC0gdGFyZ2V0OiBhZG1pc3Npb24uazhzLmdhdGVrZWVwZXIuc2gNCiAgICAgIHJlZ286IHwNCiAgICAgICAgcGFja2FnZSBrOHNkZW55Y2FwYWJpbGl0aWVzDQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGNvbnRhaW5lciA6PSBpbnB1dC5yZXZpZXcub2JqZWN0LnNwZWMuY29udGFpbmVyc1tfXQ0KICAgICAgICAgIGNvbnRhaW5lci5zZWN1cml0eUNvbnRleHQuY2FwYWJpbGl0aWVzLmFkZFtfXSA9PSAiTkVUX0FETUlOIg0KICAgICAgICAgIG1zZyA6PSBzcHJpbnRmKCJDYXBhYmlsaXR5IE5FVF9BRE1JTiBpcyBub3QgYWxsb3dlZCBpbiBjb250YWluZXIgJXYiLCBbY29udGFpbmVyLm5hbWVdKQ0KICAgICAgICB9DQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGNvbnRhaW5lciA6PSBpbnB1dC5yZXZpZXcub2JqZWN0LnNwZWMuY29udGFpbmVyc1tfXQ0KICAgICAgICAgIGNvbnRhaW5lci5zZWN1cml0eUNvbnRleHQuY2FwYWJpbGl0aWVzLmFkZFtfXSA9PSAiU1lTX0FETUlOIg0KICAgICAgICAgIG1zZyA6PSBzcHJpbnRmKCJDYXBhYmlsaXR5IFNZU19BRE1JTiBpcyBub3QgYWxsb3dlZCBpbiBjb250YWluZXIgJXYiLCBbY29udGFpbmVyLm5hbWVdKQ0KICAgICAgICB9DQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGluaXRDb250YWluZXIgOj0gaW5wdXQucmV2aWV3Lm9iamVjdC5zcGVjLmluaXRDb250YWluZXJzW19dDQogICAgICAgICAgaW5pdENvbnRhaW5lci5zZWN1cml0eUNvbnRleHQuY2FwYWJpbGl0aWVzLmFkZFtfXSA9PSAiTkVUX0FETUlOIg0KICAgICAgICAgIG1zZyA6PSBzcHJpbnRmKCJDYXBhYmlsaXR5IE5FVF9BRE1JTiBpcyBub3QgYWxsb3dlZCBpbiBpbml0IGNvbnRhaW5lciAldiIsIFtpbml0Q29udGFpbmVyLm5hbWVdKQ0KICAgICAgICB9DQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGluaXRDb250YWluZXIgOj0gaW5wdXQucmV2aWV3Lm9iamVjdC5zcGVjLmluaXRDb250YWluZXJzW19dDQogICAgICAgICAgaW5pdENvbnRhaW5lci5zZWN1cml0eUNvbnRleHQuY2FwYWJpbGl0aWVzLmFkZFtfXSA9PSAiU1lTX0FETUlOIg0KICAgICAgICAgIG1zZyA6PSBzcHJpbnRmKCJDYXBhYmlsaXR5IFNZU19BRE1JTiBpcyBub3QgYWxsb3dlZCBpbiBpbml0IGNvbnRhaW5lciAldiIsIFtpbml0Q29udGFpbmVyLm5hbWVdKQ0KICAgICAgICB9DQo=",
            "content_base64sha256": "YneQnYJP03OJidy7PpmGvWnAsjIa40EkEminrre+6OE=",
            "content_base64sha512": "MerGHE362YjPnXws53E9hyzuw//NjyORT2huw1Fpx8sBhgW0cxduQPk5+bq7iJ1AW0MI6lydv0G41pJO6ls3rA==",
            "content_md5": "24b7315c3c9a95e22898052a603311eb",
            "content_sha1": "3577202d681e34f0112b16dca9ba7bf3c5610018",
            "content_sha256": "6277909d824fd3738989dcbb3e9986bd69c0b2321ae341241268a7aeb7bee8e1",
            "content_sha512": "31eac61c4dfad988cf9d7c2ce7713d872ceec3ffcd8f23914f686ec35169c7cb018605b473176e40f939f9babb889d405b4308ea5c9dbf41b8d6924eea5b37ac",
            "filename": "./gatekeeper_policies_constraints-templates/constraint_template_denyadminscapabilities.yaml",
            "id": "3577202d681e34f0112b16dca9ba7bf3c5610018"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_template_denyrootaccess.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: templates.gatekeeper.sh/v1beta1\r\nkind: ConstraintTemplate\r\nmetadata:\r\n  name: k8sdenyrootuser\r\nspec:\r\n  crd:\r\n    spec:\r\n      names:\r\n        kind: K8sDenyRootUser\r\n  targets:\r\n    - target: admission.k8s.gatekeeper.sh\r\n      rego: |\r\n        package k8sdenyrootuser\r\n\r\n        violation[{\"msg\": msg}] {\r\n          container := input.review.object.spec.containers[_]\r\n          container.securityContext.runAsUser == 0\r\n          msg := sprintf(\"Running as root user is not allowed. Container: %v\", [container.name])\r\n        }\r\n        violation[{\"msg\": msg}] {\r\n          initContainer := input.review.object.spec.initContainers[_]\r\n          initContainer.securityContext.runAsUser == 0\r\n          msg := sprintf(\"Running as root user is not allowed. InitContainer: %v\", [initContainer.name])\r\n        }\r\n",
            "content_base64": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQ0Ka2luZDogQ29uc3RyYWludFRlbXBsYXRlDQptZXRhZGF0YToNCiAgbmFtZTogazhzZGVueXJvb3R1c2VyDQpzcGVjOg0KICBjcmQ6DQogICAgc3BlYzoNCiAgICAgIG5hbWVzOg0KICAgICAgICBraW5kOiBLOHNEZW55Um9vdFVzZXINCiAgdGFyZ2V0czoNCiAgICAtIHRhcmdldDogYWRtaXNzaW9uLms4cy5nYXRla2VlcGVyLnNoDQogICAgICByZWdvOiB8DQogICAgICAgIHBhY2thZ2UgazhzZGVueXJvb3R1c2VyDQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGNvbnRhaW5lciA6PSBpbnB1dC5yZXZpZXcub2JqZWN0LnNwZWMuY29udGFpbmVyc1tfXQ0KICAgICAgICAgIGNvbnRhaW5lci5zZWN1cml0eUNvbnRleHQucnVuQXNVc2VyID09IDANCiAgICAgICAgICBtc2cgOj0gc3ByaW50ZigiUnVubmluZyBhcyByb290IHVzZXIgaXMgbm90IGFsbG93ZWQuIENvbnRhaW5lcjogJXYiLCBbY29udGFpbmVyLm5hbWVdKQ0KICAgICAgICB9DQogICAgICAgIHZpb2xhdGlvblt7Im1zZyI6IG1zZ31dIHsNCiAgICAgICAgICBpbml0Q29udGFpbmVyIDo9IGlucHV0LnJldmlldy5vYmplY3Quc3BlYy5pbml0Q29udGFpbmVyc1tfXQ0KICAgICAgICAgIGluaXRDb250YWluZXIuc2VjdXJpdHlDb250ZXh0LnJ1bkFzVXNlciA9PSAwDQogICAgICAgICAgbXNnIDo9IHNwcmludGYoIlJ1bm5pbmcgYXMgcm9vdCB1c2VyIGlzIG5vdCBhbGxvd2VkLiBJbml0Q29udGFpbmVyOiAldiIsIFtpbml0Q29udGFpbmVyLm5hbWVdKQ0KICAgICAgICB9DQo=",
            "content_base64sha256": "XLMgK+DIvSf8USdA0u6s3fkB0Zd40koFRrYdGIL52vc=",
            "content_base64sha512": "VQDUPERoTKwtQRKUEzyK+sBKPgNykXKNjJ3zfUEjxWyGQTO1cZ/lZS4Usbk/B7iB/rD2CWk+zvSElQ8uYU3MVg==",
            "content_md5": "bd6a5adb61e6926ebc328a26fd95e87b",
            "content_sha1": "ca985f5a2838bf3d2d196d1a4ac1228b04a19889",
            "content_sha256": "5cb3202be0c8bd27fc512740d2eeacddf901d19778d24a0546b61d1882f9daf7",
            "content_sha512": "5500d43c44684cac2d411294133c8afac04a3e037291728d8c9df37d4123c56c864133b5719fe5652e14b1b93f07b881feb0f609693ecef484950f2e614dcc56",
            "filename": "./gatekeeper_policies_constraints-templates/constraint_template_denyrootaccess.yaml",
            "id": "ca985f5a2838bf3d2d196d1a4ac1228b04a19889"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_template_priviledged_access.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: templates.gatekeeper.sh/v1beta1\r\nkind: ConstraintTemplate\r\nmetadata:\r\n  name: k8sdenyhostpidprivileged\r\nspec:\r\n  crd:\r\n    spec:\r\n      names:\r\n        kind: K8sDenyHostPIDPrivileged\r\n  targets:\r\n    - target: admission.k8s.gatekeeper.sh\r\n      rego: |\r\n        package k8sdenyhostpidprivileged\r\n\r\n        violation[{\"msg\": msg}] {\r\n          input.review.kind.kind == \"Pod\"\r\n          input.review.object.spec.hostPID == true\r\n          msg := \"Using hostPID is not allowed.\"\r\n        }\r\n\r\n        violation[{\"msg\": msg}] {\r\n          input.review.kind.kind == \"Pod\"\r\n          container := input.review.object.spec.containers[_]\r\n          container.securityContext.privileged == true\r\n          msg := \"Privileged containers are not allowed.\"\r\n        }\r\n",
            "content_base64": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQ0Ka2luZDogQ29uc3RyYWludFRlbXBsYXRlDQptZXRhZGF0YToNCiAgbmFtZTogazhzZGVueWhvc3RwaWRwcml2aWxlZ2VkDQpzcGVjOg0KICBjcmQ6DQogICAgc3BlYzoNCiAgICAgIG5hbWVzOg0KICAgICAgICBraW5kOiBLOHNEZW55SG9zdFBJRFByaXZpbGVnZWQNCiAgdGFyZ2V0czoNCiAgICAtIHRhcmdldDogYWRtaXNzaW9uLms4cy5nYXRla2VlcGVyLnNoDQogICAgICByZWdvOiB8DQogICAgICAgIHBhY2thZ2UgazhzZGVueWhvc3RwaWRwcml2aWxlZ2VkDQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGlucHV0LnJldmlldy5raW5kLmtpbmQgPT0gIlBvZCINCiAgICAgICAgICBpbnB1dC5yZXZpZXcub2JqZWN0LnNwZWMuaG9zdFBJRCA9PSB0cnVlDQogICAgICAgICAgbXNnIDo9ICJVc2luZyBob3N0UElEIGlzIG5vdCBhbGxvd2VkLiINCiAgICAgICAgfQ0KDQogICAgICAgIHZpb2xhdGlvblt7Im1zZyI6IG1zZ31dIHsNCiAgICAgICAgICBpbnB1dC5yZXZpZXcua2luZC5raW5kID09ICJQb2QiDQogICAgICAgICAgY29udGFpbmVyIDo9IGlucHV0LnJldmlldy5vYmplY3Quc3BlYy5jb250YWluZXJzW19dDQogICAgICAgICAgY29udGFpbmVyLnNlY3VyaXR5Q29udGV4dC5wcml2aWxlZ2VkID09IHRydWUNCiAgICAgICAgICBtc2cgOj0gIlByaXZpbGVnZWQgY29udGFpbmVycyBhcmUgbm90IGFsbG93ZWQuIg0KICAgICAgICB9DQo=",
            "content_base64sha256": "QntnXhbkOcJe6ppry/tSMkra0j/LcCauHHxWLPGhHNY=",
            "content_base64sha512": "d5BzOGJC6S+uzzrRFDqiPt887WGfZAhblK5lXUULJ4YpRLq1XpiSAWi12GlUF5zn2swNW+npCfoPx/h+SfIOXA==",
            "content_md5": "bb7486fefe2adc6b3ed587b9f681faaa",
            "content_sha1": "ff89f57f03030645bbed79005cd8cd9a11ed507a",
            "content_sha256": "427b675e16e439c25eea9a6bcbfb52324adad23fcb7026ae1c7c562cf1a11cd6",
            "content_sha512": "779073386242e92faecf3ad1143aa23edf3ced619f64085b94ae655d450b27862944bab55e98920168b5d86954179ce7dacc0d5be9e909fa0fc7f87e49f20e5c",
            "filename": "./gatekeeper_policies_constraints-templates/constraint_template_priviledged_access.yaml",
            "id": "ff89f57f03030645bbed79005cd8cd9a11ed507a"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_template_privilegeescalation.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: templates.gatekeeper.sh/v1beta1\r\nkind: ConstraintTemplate\r\nmetadata:\r\n  name: k8sdenyprivilegeescalation\r\nspec:\r\n  crd:\r\n    spec:\r\n      names:\r\n        kind: K8sDenyPrivilegeEscalation\r\n  targets:\r\n    - target: admission.k8s.gatekeeper.sh\r\n      rego: |\r\n        package k8sdenyprivilegeescalation\r\n\r\n        violation[{\"msg\": msg}] {\r\n          container := input.review.object.spec.containers[_]\r\n          container.securityContext.allowPrivilegeEscalation == true\r\n          msg := sprintf(\"Privilege escalation is not allowed. Container: %v\", [container.name])\r\n        }\r\n        violation[{\"msg\": msg}] {\r\n          initContainer := input.review.object.spec.initContainers[_]\r\n          initContainer.securityContext.allowPrivilegeEscalation == true\r\n          msg := sprintf(\"Privilege escalation is not allowed. InitContainer: %v\", [initContainer.name])\r\n        }\r\n",
            "content_base64": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQ0Ka2luZDogQ29uc3RyYWludFRlbXBsYXRlDQptZXRhZGF0YToNCiAgbmFtZTogazhzZGVueXByaXZpbGVnZWVzY2FsYXRpb24NCnNwZWM6DQogIGNyZDoNCiAgICBzcGVjOg0KICAgICAgbmFtZXM6DQogICAgICAgIGtpbmQ6IEs4c0RlbnlQcml2aWxlZ2VFc2NhbGF0aW9uDQogIHRhcmdldHM6DQogICAgLSB0YXJnZXQ6IGFkbWlzc2lvbi5rOHMuZ2F0ZWtlZXBlci5zaA0KICAgICAgcmVnbzogfA0KICAgICAgICBwYWNrYWdlIGs4c2Rlbnlwcml2aWxlZ2Vlc2NhbGF0aW9uDQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGNvbnRhaW5lciA6PSBpbnB1dC5yZXZpZXcub2JqZWN0LnNwZWMuY29udGFpbmVyc1tfXQ0KICAgICAgICAgIGNvbnRhaW5lci5zZWN1cml0eUNvbnRleHQuYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uID09IHRydWUNCiAgICAgICAgICBtc2cgOj0gc3ByaW50ZigiUHJpdmlsZWdlIGVzY2FsYXRpb24gaXMgbm90IGFsbG93ZWQuIENvbnRhaW5lcjogJXYiLCBbY29udGFpbmVyLm5hbWVdKQ0KICAgICAgICB9DQogICAgICAgIHZpb2xhdGlvblt7Im1zZyI6IG1zZ31dIHsNCiAgICAgICAgICBpbml0Q29udGFpbmVyIDo9IGlucHV0LnJldmlldy5vYmplY3Quc3BlYy5pbml0Q29udGFpbmVyc1tfXQ0KICAgICAgICAgIGluaXRDb250YWluZXIuc2VjdXJpdHlDb250ZXh0LmFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbiA9PSB0cnVlDQogICAgICAgICAgbXNnIDo9IHNwcmludGYoIlByaXZpbGVnZSBlc2NhbGF0aW9uIGlzIG5vdCBhbGxvd2VkLiBJbml0Q29udGFpbmVyOiAldiIsIFtpbml0Q29udGFpbmVyLm5hbWVdKQ0KICAgICAgICB9DQo=",
            "content_base64sha256": "bldBtYnmW7BkX5wvEIJ02Rgte+WVWwC0Y/nDb8qVYBg=",
            "content_base64sha512": "NIuIgKwiH7nq0YMUNdkFgYM1uzmJeUXza7oL8KqL/xvw07q6TYX3R5tzOurE27SrOq+9jUe/4EBnkRjqtM4zVw==",
            "content_md5": "4b368b272e1be26384ed737d9e7efd64",
            "content_sha1": "f091e70f348b9e4ab7e6a252f8a1aa22974bc891",
            "content_sha256": "6e5741b589e65bb0645f9c2f108274d9182d7be5955b00b463f9c36fca956018",
            "content_sha512": "348b8880ac221fb9ead1831435d905818335bb39897945f36bba0bf0aa8bff1bf0d3baba4d85f7479b733aeac4dbb4ab3aafbd8d47bfe040679118eab4ce3357",
            "filename": "./gatekeeper_policies_constraints-templates/constraint_template_privilegeescalation.yaml",
            "id": "f091e70f348b9e4ab7e6a252f8a1aa22974bc891"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_template_readonlyrootaccess.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: templates.gatekeeper.sh/v1beta1\r\nkind: ConstraintTemplate\r\nmetadata:\r\n  name: k8senforcereadonlyrootfilesystem\r\nspec:\r\n  crd:\r\n    spec:\r\n      names:\r\n        kind: K8sEnforceReadOnlyRootFilesystem\r\n  targets:\r\n    - target: admission.k8s.gatekeeper.sh\r\n      rego: |\r\n        package k8senforcereadonlyrootfilesystem\r\n\r\n        violation[{\"msg\": msg}] {\r\n          container := input.review.object.spec.containers[_]\r\n          not container.securityContext.readOnlyRootFilesystem\r\n          msg := sprintf(\"Containers must run with a read-only root filesystem. Container: %v\", [container.name])\r\n        }\r\n        violation[{\"msg\": msg}] {\r\n          initContainer := input.review.object.spec.initContainers[_]\r\n          not initContainer.securityContext.readOnlyRootFilesystem\r\n          msg := sprintf(\"InitContainers must run with a read-only root filesystem. InitContainer: %v\", [initContainer.name])\r\n        }\r\n",
            "content_base64": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQ0Ka2luZDogQ29uc3RyYWludFRlbXBsYXRlDQptZXRhZGF0YToNCiAgbmFtZTogazhzZW5mb3JjZXJlYWRvbmx5cm9vdGZpbGVzeXN0ZW0NCnNwZWM6DQogIGNyZDoNCiAgICBzcGVjOg0KICAgICAgbmFtZXM6DQogICAgICAgIGtpbmQ6IEs4c0VuZm9yY2VSZWFkT25seVJvb3RGaWxlc3lzdGVtDQogIHRhcmdldHM6DQogICAgLSB0YXJnZXQ6IGFkbWlzc2lvbi5rOHMuZ2F0ZWtlZXBlci5zaA0KICAgICAgcmVnbzogfA0KICAgICAgICBwYWNrYWdlIGs4c2VuZm9yY2VyZWFkb25seXJvb3RmaWxlc3lzdGVtDQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGNvbnRhaW5lciA6PSBpbnB1dC5yZXZpZXcub2JqZWN0LnNwZWMuY29udGFpbmVyc1tfXQ0KICAgICAgICAgIG5vdCBjb250YWluZXIuc2VjdXJpdHlDb250ZXh0LnJlYWRPbmx5Um9vdEZpbGVzeXN0ZW0NCiAgICAgICAgICBtc2cgOj0gc3ByaW50ZigiQ29udGFpbmVycyBtdXN0IHJ1biB3aXRoIGEgcmVhZC1vbmx5IHJvb3QgZmlsZXN5c3RlbS4gQ29udGFpbmVyOiAldiIsIFtjb250YWluZXIubmFtZV0pDQogICAgICAgIH0NCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGluaXRDb250YWluZXIgOj0gaW5wdXQucmV2aWV3Lm9iamVjdC5zcGVjLmluaXRDb250YWluZXJzW19dDQogICAgICAgICAgbm90IGluaXRDb250YWluZXIuc2VjdXJpdHlDb250ZXh0LnJlYWRPbmx5Um9vdEZpbGVzeXN0ZW0NCiAgICAgICAgICBtc2cgOj0gc3ByaW50ZigiSW5pdENvbnRhaW5lcnMgbXVzdCBydW4gd2l0aCBhIHJlYWQtb25seSByb290IGZpbGVzeXN0ZW0uIEluaXRDb250YWluZXI6ICV2IiwgW2luaXRDb250YWluZXIubmFtZV0pDQogICAgICAgIH0NCg==",
            "content_base64sha256": "Pcs4OQoAAlrdWYH+HQsVyEMPgxIduAN9GQyeRYqLmUM=",
            "content_base64sha512": "7WUErD2tx4/BEvlM/kyafq/IVwZsMIUygtbqkNyvvJbeRA+jiIIQtaOVMqhZpIhdiz5w3RETg6XAC6vrdyjHFA==",
            "content_md5": "137abd562f1097d751f0c3e16b7142b9",
            "content_sha1": "c8255f6512612665fe3263add2d71be705d72e92",
            "content_sha256": "3dcb38390a00025add5981fe1d0b15c8430f83121db8037d190c9e458a8b9943",
            "content_sha512": "ed6504ac3dadc78fc112f94cfe4c9a7eafc857066c30853282d6ea90dcafbc96de440fa3888210b5a39532a859a4885d8b3e70dd111383a5c00babeb7728c714",
            "filename": "./gatekeeper_policies_constraints-templates/constraint_template_readonlyrootaccess.yaml",
            "id": "c8255f6512612665fe3263add2d71be705d72e92"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_template_seccomp.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: templates.gatekeeper.sh/v1beta1\r\nkind: ConstraintTemplate\r\nmetadata:\r\n  name: k8sseccomp\r\nspec:\r\n  crd:\r\n    spec:\r\n      names:\r\n        kind: K8sSeccomp\r\n  targets:\r\n    - target: admission.k8s.gatekeeper.sh\r\n      rego: |\r\n        package k8sseccomp\r\n\r\n        violation[{\"msg\": msg}] {\r\n          input.review.kind.kind == \"Pod\"\r\n          not seccomp_enabled(input.review.object)\r\n          msg := \"Seccomp must be enabled for all pods.\"\r\n        }\r\n\r\n        violation[{\"msg\": msg}] {\r\n          input.review.kind.kind == \"Pod\"\r\n          container := input.review.object.spec.initContainers[_]\r\n          not seccomp_enabled(container)\r\n          msg := \"Seccomp must be enabled for all initContainers.\"\r\n        }\r\n\r\n        violation[{\"msg\": msg}] {\r\n          input.review.kind.kind == \"Pod\"\r\n          container := input.review.object.spec.containers[_]\r\n          not seccomp_enabled(container)\r\n          msg := \"Seccomp must be enabled for all containers.\"\r\n        }\r\n\r\n        seccomp_enabled(obj) {\r\n          obj.metadata.annotations[\"seccomp.security.alpha.kubernetes.io/pod\"]\r\n        }\r\n\r\n        seccomp_enabled(container) {\r\n          container.securityContext.seccompProfile.type\r\n        }\r\n",
            "content_base64": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQ0Ka2luZDogQ29uc3RyYWludFRlbXBsYXRlDQptZXRhZGF0YToNCiAgbmFtZTogazhzc2VjY29tcA0Kc3BlYzoNCiAgY3JkOg0KICAgIHNwZWM6DQogICAgICBuYW1lczoNCiAgICAgICAga2luZDogSzhzU2VjY29tcA0KICB0YXJnZXRzOg0KICAgIC0gdGFyZ2V0OiBhZG1pc3Npb24uazhzLmdhdGVrZWVwZXIuc2gNCiAgICAgIHJlZ286IHwNCiAgICAgICAgcGFja2FnZSBrOHNzZWNjb21wDQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGlucHV0LnJldmlldy5raW5kLmtpbmQgPT0gIlBvZCINCiAgICAgICAgICBub3Qgc2VjY29tcF9lbmFibGVkKGlucHV0LnJldmlldy5vYmplY3QpDQogICAgICAgICAgbXNnIDo9ICJTZWNjb21wIG11c3QgYmUgZW5hYmxlZCBmb3IgYWxsIHBvZHMuIg0KICAgICAgICB9DQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGlucHV0LnJldmlldy5raW5kLmtpbmQgPT0gIlBvZCINCiAgICAgICAgICBjb250YWluZXIgOj0gaW5wdXQucmV2aWV3Lm9iamVjdC5zcGVjLmluaXRDb250YWluZXJzW19dDQogICAgICAgICAgbm90IHNlY2NvbXBfZW5hYmxlZChjb250YWluZXIpDQogICAgICAgICAgbXNnIDo9ICJTZWNjb21wIG11c3QgYmUgZW5hYmxlZCBmb3IgYWxsIGluaXRDb250YWluZXJzLiINCiAgICAgICAgfQ0KDQogICAgICAgIHZpb2xhdGlvblt7Im1zZyI6IG1zZ31dIHsNCiAgICAgICAgICBpbnB1dC5yZXZpZXcua2luZC5raW5kID09ICJQb2QiDQogICAgICAgICAgY29udGFpbmVyIDo9IGlucHV0LnJldmlldy5vYmplY3Quc3BlYy5jb250YWluZXJzW19dDQogICAgICAgICAgbm90IHNlY2NvbXBfZW5hYmxlZChjb250YWluZXIpDQogICAgICAgICAgbXNnIDo9ICJTZWNjb21wIG11c3QgYmUgZW5hYmxlZCBmb3IgYWxsIGNvbnRhaW5lcnMuIg0KICAgICAgICB9DQoNCiAgICAgICAgc2VjY29tcF9lbmFibGVkKG9iaikgew0KICAgICAgICAgIG9iai5tZXRhZGF0YS5hbm5vdGF0aW9uc1sic2VjY29tcC5zZWN1cml0eS5hbHBoYS5rdWJlcm5ldGVzLmlvL3BvZCJdDQogICAgICAgIH0NCg0KICAgICAgICBzZWNjb21wX2VuYWJsZWQoY29udGFpbmVyKSB7DQogICAgICAgICAgY29udGFpbmVyLnNlY3VyaXR5Q29udGV4dC5zZWNjb21wUHJvZmlsZS50eXBlDQogICAgICAgIH0NCg==",
            "content_base64sha256": "xdeKUSCnf/UKtqD/ksD9YSGdvS8/UXVnEfymB088Xjk=",
            "content_base64sha512": "GFA51Im6OEl5vIP1keTGzdLgFPLw7Fb2gKM7f7ZcmjiPSoaugPXJa6Qu8HJu8DV9ReO15Ln6uMYqoCUS9Z5fQA==",
            "content_md5": "9fa7752aa040fef724d5d5a053def175",
            "content_sha1": "b10ee4a6136e9c0a1edd5b80b546a8fc02e4ca29",
            "content_sha256": "c5d78a5120a77ff50ab6a0ff92c0fd61219dbd2f3f51756711fca6074f3c5e39",
            "content_sha512": "185039d489ba384979bc83f591e4c6cdd2e014f2f0ec56f680a33b7fb65c9a388f4a86ae80f5c96ba42ef0726ef0357d45e3b5e4b9fab8c62aa02512f59e5f40",
            "filename": "./gatekeeper_policies_constraints-templates/constraint_template_seccomp.yaml",
            "id": "b10ee4a6136e9c0a1edd5b80b546a8fc02e4ca29"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "constraint_template_selinux.yaml",
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: templates.gatekeeper.sh/v1beta1\r\nkind: ConstraintTemplate\r\nmetadata:\r\n  name: k8sdenyselinux\r\nspec:\r\n  crd:\r\n    spec:\r\n      names:\r\n        kind: K8sDenySELinux\r\n  targets:\r\n    - target: admission.k8s.gatekeeper.sh\r\n      rego: |\r\n        package k8sdenyselinux\r\n\r\n        violation[{\"msg\": msg}] {\r\n          container := input.review.object.spec.containers[_]\r\n          container.securityContext.seLinuxOptions\r\n          msg := sprintf(\"SELinux options are not allowed in container %v\", [container.name])\r\n        }\r\n\r\n        violation[{\"msg\": msg}] {\r\n          initContainer := input.review.object.spec.initContainers[_]\r\n          initContainer.securityContext.seLinuxOptions\r\n          msg := sprintf(\"SELinux options are not allowed in init container %v\", [initContainer.name])\r\n        }\r\n",
            "content_base64": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQ0Ka2luZDogQ29uc3RyYWludFRlbXBsYXRlDQptZXRhZGF0YToNCiAgbmFtZTogazhzZGVueXNlbGludXgNCnNwZWM6DQogIGNyZDoNCiAgICBzcGVjOg0KICAgICAgbmFtZXM6DQogICAgICAgIGtpbmQ6IEs4c0RlbnlTRUxpbnV4DQogIHRhcmdldHM6DQogICAgLSB0YXJnZXQ6IGFkbWlzc2lvbi5rOHMuZ2F0ZWtlZXBlci5zaA0KICAgICAgcmVnbzogfA0KICAgICAgICBwYWNrYWdlIGs4c2RlbnlzZWxpbnV4DQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGNvbnRhaW5lciA6PSBpbnB1dC5yZXZpZXcub2JqZWN0LnNwZWMuY29udGFpbmVyc1tfXQ0KICAgICAgICAgIGNvbnRhaW5lci5zZWN1cml0eUNvbnRleHQuc2VMaW51eE9wdGlvbnMNCiAgICAgICAgICBtc2cgOj0gc3ByaW50ZigiU0VMaW51eCBvcHRpb25zIGFyZSBub3QgYWxsb3dlZCBpbiBjb250YWluZXIgJXYiLCBbY29udGFpbmVyLm5hbWVdKQ0KICAgICAgICB9DQoNCiAgICAgICAgdmlvbGF0aW9uW3sibXNnIjogbXNnfV0gew0KICAgICAgICAgIGluaXRDb250YWluZXIgOj0gaW5wdXQucmV2aWV3Lm9iamVjdC5zcGVjLmluaXRDb250YWluZXJzW19dDQogICAgICAgICAgaW5pdENvbnRhaW5lci5zZWN1cml0eUNvbnRleHQuc2VMaW51eE9wdGlvbnMNCiAgICAgICAgICBtc2cgOj0gc3ByaW50ZigiU0VMaW51eCBvcHRpb25zIGFyZSBub3QgYWxsb3dlZCBpbiBpbml0IGNvbnRhaW5lciAldiIsIFtpbml0Q29udGFpbmVyLm5hbWVdKQ0KICAgICAgICB9DQo=",
            "content_base64sha256": "BHiHbstHFN0seUTb0ENBvvKwgclJELyxd/uBgFPLhiI=",
            "content_base64sha512": "+Ug6maMHUcUKC/QYzViAkJ1I5Io3ywC8hNl97CrmZxTI2jgvAwYk42rCrWyHuPT3G2YjYLwp+h//oKG2aGHufw==",
            "content_md5": "50c3d9c3d7460ed5ab050da5185fce7d",
            "content_sha1": "27a29189e9e09b0c9602e3c05cb00b95f50dd139",
            "content_sha256": "0478876ecb4714dd2c7944dbd04341bef2b081c94910bcb177fb818053cb8622",
            "content_sha512": "f9483a99a30751c50a0bf418cd5880909d48e48a37cb00bc84d97dec2ae66714c8da382f030624e36ac2ad6c87b8f4f71b662360bc29fa1fffa0a1b66861ee7f",
            "filename": "./gatekeeper_policies_constraints-templates/constraint_template_selinux.yaml",
            "id": "27a29189e9e09b0c9602e3c05cb00b95f50dd139"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "gatekeeper",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "gatekeeper",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "gatekeeper",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v3.16.3",
                "chart": "gatekeeper",
                "first_deployed": 1721176273,
                "last_deployed": 1721176273,
                "name": "gatekeeper",
                "namespace": "gatekeeper-system",
                "notes": "",
                "revision": 1,
                "values": "{}",
                "version": "3.16.3"
              }
            ],
            "name": "gatekeeper",
            "namespace": "gatekeeper-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://open-policy-agent.github.io/gatekeeper/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "3.16.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.gatekeeper",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kube-prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.75.1",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1721176274,
                "last_deployed": 1721176274,
                "name": "kube-prometheus",
                "namespace": "monitoring",
                "notes": "kube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace monitoring get pods -l \"release=kube-prometheus\"\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=kube-prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace monitoring $POD_NAME 9100\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace monitoring kube-prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   kube-prometheus-grafana.monitoring.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=kube-prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace monitoring port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, kube-prometheus-kube-state-metrics.monitoring.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n",
                "revision": 1,
                "values": "{}",
                "version": "61.3.1"
              }
            ],
            "name": "kube-prometheus",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "61.3.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "gatekeeper_constraints",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": "constraint_denyadmincapabilities.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenyCapabilities",
                "metadata": {
                  "name": "k8sdenycapabilities"
                },
                "spec": {
                  "match": {
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "match": [
                        "object",
                        {
                          "kinds": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "kinds": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenyCapabilities",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8sdenycapabilities",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "enforcementAction": "deny",
                  "match": {
                    "excludedNamespaces": null,
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ],
                    "labelSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "name": null,
                    "namespaceSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "namespaces": null,
                    "scope": null,
                    "source": null
                  },
                  "parameters": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "enforcementAction": "string",
                      "match": [
                        "object",
                        {
                          "excludedNamespaces": [
                            "list",
                            "string"
                          ],
                          "kinds": [
                            "list",
                            [
                              "object",
                              {
                                "apiGroups": [
                                  "list",
                                  "string"
                                ],
                                "kinds": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "labelSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "name": "string",
                          "namespaceSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "namespaces": [
                            "list",
                            "string"
                          ],
                          "scope": "string",
                          "source": "string"
                        }
                      ],
                      "parameters": "dynamic"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_constraints",
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_manifest.gatekeeper_templates",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_file_denyrootaccess.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenyRootUser",
                "metadata": {
                  "name": "deny-root-user"
                },
                "spec": {
                  "match": {
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "match": [
                        "object",
                        {
                          "kinds": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "kinds": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenyRootUser",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "deny-root-user",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "enforcementAction": "deny",
                  "match": {
                    "excludedNamespaces": null,
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ],
                    "labelSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "name": null,
                    "namespaceSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "namespaces": null,
                    "scope": null,
                    "source": null
                  },
                  "parameters": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "enforcementAction": "string",
                      "match": [
                        "object",
                        {
                          "excludedNamespaces": [
                            "list",
                            "string"
                          ],
                          "kinds": [
                            "list",
                            [
                              "object",
                              {
                                "apiGroups": [
                                  "list",
                                  "string"
                                ],
                                "kinds": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "labelSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "name": "string",
                          "namespaceSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "namespaces": [
                            "list",
                            "string"
                          ],
                          "scope": "string",
                          "source": "string"
                        }
                      ],
                      "parameters": "dynamic"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_constraints",
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_manifest.gatekeeper_templates",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_privileged.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenyHostPIDPrivileged",
                "metadata": {
                  "name": "deny-hostpid-privileged"
                },
                "spec": {
                  "match": {
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "match": [
                        "object",
                        {
                          "kinds": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "kinds": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenyHostPIDPrivileged",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "deny-hostpid-privileged",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "enforcementAction": "deny",
                  "match": {
                    "excludedNamespaces": null,
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ],
                    "labelSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "name": null,
                    "namespaceSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "namespaces": null,
                    "scope": null,
                    "source": null
                  },
                  "parameters": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "enforcementAction": "string",
                      "match": [
                        "object",
                        {
                          "excludedNamespaces": [
                            "list",
                            "string"
                          ],
                          "kinds": [
                            "list",
                            [
                              "object",
                              {
                                "apiGroups": [
                                  "list",
                                  "string"
                                ],
                                "kinds": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "labelSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "name": "string",
                          "namespaceSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "namespaces": [
                            "list",
                            "string"
                          ],
                          "scope": "string",
                          "source": "string"
                        }
                      ],
                      "parameters": "dynamic"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_constraints",
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_manifest.gatekeeper_templates",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_privilegeescalation.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenyPrivilegeEscalation",
                "metadata": {
                  "name": "deny-privilege-escalation"
                },
                "spec": {
                  "match": {
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "match": [
                        "object",
                        {
                          "kinds": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "kinds": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenyPrivilegeEscalation",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "deny-privilege-escalation",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "enforcementAction": "deny",
                  "match": {
                    "excludedNamespaces": null,
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ],
                    "labelSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "name": null,
                    "namespaceSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "namespaces": null,
                    "scope": null,
                    "source": null
                  },
                  "parameters": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "enforcementAction": "string",
                      "match": [
                        "object",
                        {
                          "excludedNamespaces": [
                            "list",
                            "string"
                          ],
                          "kinds": [
                            "list",
                            [
                              "object",
                              {
                                "apiGroups": [
                                  "list",
                                  "string"
                                ],
                                "kinds": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "labelSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "name": "string",
                          "namespaceSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "namespaces": [
                            "list",
                            "string"
                          ],
                          "scope": "string",
                          "source": "string"
                        }
                      ],
                      "parameters": "dynamic"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_constraints",
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_manifest.gatekeeper_templates",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_readonlyrootaccess.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sEnforceReadOnlyRootFilesystem",
                "metadata": {
                  "name": "enforce-readonly-root-filesystem"
                },
                "spec": {
                  "match": {
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "match": [
                        "object",
                        {
                          "kinds": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "kinds": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sEnforceReadOnlyRootFilesystem",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "enforce-readonly-root-filesystem",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "enforcementAction": "deny",
                  "match": {
                    "excludedNamespaces": null,
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ],
                    "labelSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "name": null,
                    "namespaceSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "namespaces": null,
                    "scope": null,
                    "source": null
                  },
                  "parameters": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "enforcementAction": "string",
                      "match": [
                        "object",
                        {
                          "excludedNamespaces": [
                            "list",
                            "string"
                          ],
                          "kinds": [
                            "list",
                            [
                              "object",
                              {
                                "apiGroups": [
                                  "list",
                                  "string"
                                ],
                                "kinds": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "labelSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "name": "string",
                          "namespaceSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "namespaces": [
                            "list",
                            "string"
                          ],
                          "scope": "string",
                          "source": "string"
                        }
                      ],
                      "parameters": "dynamic"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_constraints",
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_manifest.gatekeeper_templates",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_seccomp.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sSeccomp",
                "metadata": {
                  "name": "seccomp-enabled"
                },
                "spec": {
                  "match": {
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "match": [
                        "object",
                        {
                          "kinds": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "kinds": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sSeccomp",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "seccomp-enabled",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "enforcementAction": "deny",
                  "match": {
                    "excludedNamespaces": null,
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ],
                    "labelSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "name": null,
                    "namespaceSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "namespaces": null,
                    "scope": null,
                    "source": null
                  },
                  "parameters": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "enforcementAction": "string",
                      "match": [
                        "object",
                        {
                          "excludedNamespaces": [
                            "list",
                            "string"
                          ],
                          "kinds": [
                            "list",
                            [
                              "object",
                              {
                                "apiGroups": [
                                  "list",
                                  "string"
                                ],
                                "kinds": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "labelSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "name": "string",
                          "namespaceSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "namespaces": [
                            "list",
                            "string"
                          ],
                          "scope": "string",
                          "source": "string"
                        }
                      ],
                      "parameters": "dynamic"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_constraints",
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_manifest.gatekeeper_templates",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_selinux.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenySELinux",
                "metadata": {
                  "name": "deny-selinux"
                },
                "spec": {
                  "match": {
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "match": [
                        "object",
                        {
                          "kinds": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "kinds": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenySELinux",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "deny-selinux",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "enforcementAction": "deny",
                  "match": {
                    "excludedNamespaces": null,
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "Pod"
                        ]
                      }
                    ],
                    "labelSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "name": null,
                    "namespaceSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "namespaces": null,
                    "scope": null,
                    "source": null
                  },
                  "parameters": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "enforcementAction": "string",
                      "match": [
                        "object",
                        {
                          "excludedNamespaces": [
                            "list",
                            "string"
                          ],
                          "kinds": [
                            "list",
                            [
                              "object",
                              {
                                "apiGroups": [
                                  "list",
                                  "string"
                                ],
                                "kinds": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "labelSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "name": "string",
                          "namespaceSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "namespaces": [
                            "list",
                            "string"
                          ],
                          "scope": "string",
                          "source": "string"
                        }
                      ],
                      "parameters": "dynamic"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_constraints",
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_manifest.gatekeeper_templates",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraints_defaultns.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenyDefaultNamespace",
                "metadata": {
                  "name": "deny-default-namespace"
                },
                "spec": {
                  "match": {
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "*"
                        ]
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "match": [
                        "object",
                        {
                          "kinds": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "apiGroups": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "kinds": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "constraints.gatekeeper.sh/v1beta1",
                "kind": "K8sDenyDefaultNamespace",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "deny-default-namespace",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "enforcementAction": "deny",
                  "match": {
                    "excludedNamespaces": null,
                    "kinds": [
                      {
                        "apiGroups": [
                          ""
                        ],
                        "kinds": [
                          "*"
                        ]
                      }
                    ],
                    "labelSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "name": null,
                    "namespaceSelector": {
                      "matchExpressions": null,
                      "matchLabels": null
                    },
                    "namespaces": null,
                    "scope": null,
                    "source": null
                  },
                  "parameters": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "enforcementAction": "string",
                      "match": [
                        "object",
                        {
                          "excludedNamespaces": [
                            "list",
                            "string"
                          ],
                          "kinds": [
                            "list",
                            [
                              "object",
                              {
                                "apiGroups": [
                                  "list",
                                  "string"
                                ],
                                "kinds": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "labelSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "name": "string",
                          "namespaceSelector": [
                            "object",
                            {
                              "matchExpressions": [
                                "list",
                                [
                                  "object",
                                  {
                                    "key": "string",
                                    "operator": "string",
                                    "values": [
                                      "list",
                                      "string"
                                    ]
                                  }
                                ]
                              ],
                              "matchLabels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "namespaces": [
                            "list",
                            "string"
                          ],
                          "scope": "string",
                          "source": "string"
                        }
                      ],
                      "parameters": "dynamic"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_constraints",
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_manifest.gatekeeper_templates",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "gatekeeper_templates",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": "constraint_template-kubesecrets.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "name": "k8sdisallowedsecret"
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDisallowedSecret"
                      }
                    }
                  },
                  "targets": [
                    {
                      "rego": "package k8sdisallowedsecret\n\nviolation[{\"msg\": msg}] {disa\n  input.review.kind.kind == \"Secret\"\n  msg := \"Usage of Secrets is not allowed.\"\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8sdisallowedsecret",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDisallowedSecret",
                        "shortNames": null
                      },
                      "validation": {
                        "legacySchema": true,
                        "openAPIV3Schema": null
                      }
                    }
                  },
                  "targets": [
                    {
                      "code": null,
                      "libs": null,
                      "rego": "package k8sdisallowedsecret\n\nviolation[{\"msg\": msg}] {disa\n  input.review.kind.kind == \"Secret\"\n  msg := \"Usage of Secrets is not allowed.\"\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string",
                                  "shortNames": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "validation": [
                                "object",
                                {
                                  "legacySchema": "bool",
                                  "openAPIV3Schema": "dynamic"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "code": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "engine": "string",
                                      "source": "dynamic"
                                    }
                                  ]
                                ]
                              ],
                              "libs": [
                                "list",
                                "string"
                              ],
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_template_defaultns.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "name": "k8sdenydefaultnamespace"
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenyDefaultNamespace"
                      }
                    }
                  },
                  "targets": [
                    {
                      "rego": "package k8sdenydefaultnamespace\n\nviolation[{\"msg\": msg}] {\n  input.review.object.metadata.namespace == \"default\"\n  msg := \"Creating resources in the default namespace is not allowed.\"\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8sdenydefaultnamespace",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenyDefaultNamespace",
                        "shortNames": null
                      },
                      "validation": {
                        "legacySchema": true,
                        "openAPIV3Schema": null
                      }
                    }
                  },
                  "targets": [
                    {
                      "code": null,
                      "libs": null,
                      "rego": "package k8sdenydefaultnamespace\n\nviolation[{\"msg\": msg}] {\n  input.review.object.metadata.namespace == \"default\"\n  msg := \"Creating resources in the default namespace is not allowed.\"\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string",
                                  "shortNames": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "validation": [
                                "object",
                                {
                                  "legacySchema": "bool",
                                  "openAPIV3Schema": "dynamic"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "code": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "engine": "string",
                                      "source": "dynamic"
                                    }
                                  ]
                                ]
                              ],
                              "libs": [
                                "list",
                                "string"
                              ],
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_template_denyadminscapabilities.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "name": "k8sdenycapabilities"
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenyCapabilities"
                      }
                    }
                  },
                  "targets": [
                    {
                      "rego": "package k8sdenycapabilities\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  container.securityContext.capabilities.add[_] == \"NET_ADMIN\"\n  msg := sprintf(\"Capability NET_ADMIN is not allowed in container %v\", [container.name])\n}\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  container.securityContext.capabilities.add[_] == \"SYS_ADMIN\"\n  msg := sprintf(\"Capability SYS_ADMIN is not allowed in container %v\", [container.name])\n}\n\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  initContainer.securityContext.capabilities.add[_] == \"NET_ADMIN\"\n  msg := sprintf(\"Capability NET_ADMIN is not allowed in init container %v\", [initContainer.name])\n}\n\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  initContainer.securityContext.capabilities.add[_] == \"SYS_ADMIN\"\n  msg := sprintf(\"Capability SYS_ADMIN is not allowed in init container %v\", [initContainer.name])\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8sdenycapabilities",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenyCapabilities",
                        "shortNames": null
                      },
                      "validation": {
                        "legacySchema": true,
                        "openAPIV3Schema": null
                      }
                    }
                  },
                  "targets": [
                    {
                      "code": null,
                      "libs": null,
                      "rego": "package k8sdenycapabilities\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  container.securityContext.capabilities.add[_] == \"NET_ADMIN\"\n  msg := sprintf(\"Capability NET_ADMIN is not allowed in container %v\", [container.name])\n}\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  container.securityContext.capabilities.add[_] == \"SYS_ADMIN\"\n  msg := sprintf(\"Capability SYS_ADMIN is not allowed in container %v\", [container.name])\n}\n\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  initContainer.securityContext.capabilities.add[_] == \"NET_ADMIN\"\n  msg := sprintf(\"Capability NET_ADMIN is not allowed in init container %v\", [initContainer.name])\n}\n\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  initContainer.securityContext.capabilities.add[_] == \"SYS_ADMIN\"\n  msg := sprintf(\"Capability SYS_ADMIN is not allowed in init container %v\", [initContainer.name])\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string",
                                  "shortNames": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "validation": [
                                "object",
                                {
                                  "legacySchema": "bool",
                                  "openAPIV3Schema": "dynamic"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "code": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "engine": "string",
                                      "source": "dynamic"
                                    }
                                  ]
                                ]
                              ],
                              "libs": [
                                "list",
                                "string"
                              ],
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_template_denyrootaccess.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "name": "k8sdenyrootuser"
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenyRootUser"
                      }
                    }
                  },
                  "targets": [
                    {
                      "rego": "package k8sdenyrootuser\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  container.securityContext.runAsUser == 0\n  msg := sprintf(\"Running as root user is not allowed. Container: %v\", [container.name])\n}\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  initContainer.securityContext.runAsUser == 0\n  msg := sprintf(\"Running as root user is not allowed. InitContainer: %v\", [initContainer.name])\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8sdenyrootuser",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenyRootUser",
                        "shortNames": null
                      },
                      "validation": {
                        "legacySchema": true,
                        "openAPIV3Schema": null
                      }
                    }
                  },
                  "targets": [
                    {
                      "code": null,
                      "libs": null,
                      "rego": "package k8sdenyrootuser\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  container.securityContext.runAsUser == 0\n  msg := sprintf(\"Running as root user is not allowed. Container: %v\", [container.name])\n}\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  initContainer.securityContext.runAsUser == 0\n  msg := sprintf(\"Running as root user is not allowed. InitContainer: %v\", [initContainer.name])\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string",
                                  "shortNames": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "validation": [
                                "object",
                                {
                                  "legacySchema": "bool",
                                  "openAPIV3Schema": "dynamic"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "code": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "engine": "string",
                                      "source": "dynamic"
                                    }
                                  ]
                                ]
                              ],
                              "libs": [
                                "list",
                                "string"
                              ],
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_template_priviledged_access.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "name": "k8sdenyhostpidprivileged"
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenyHostPIDPrivileged"
                      }
                    }
                  },
                  "targets": [
                    {
                      "rego": "package k8sdenyhostpidprivileged\n\nviolation[{\"msg\": msg}] {\n  input.review.kind.kind == \"Pod\"\n  input.review.object.spec.hostPID == true\n  msg := \"Using hostPID is not allowed.\"\n}\n\nviolation[{\"msg\": msg}] {\n  input.review.kind.kind == \"Pod\"\n  container := input.review.object.spec.containers[_]\n  container.securityContext.privileged == true\n  msg := \"Privileged containers are not allowed.\"\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8sdenyhostpidprivileged",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenyHostPIDPrivileged",
                        "shortNames": null
                      },
                      "validation": {
                        "legacySchema": true,
                        "openAPIV3Schema": null
                      }
                    }
                  },
                  "targets": [
                    {
                      "code": null,
                      "libs": null,
                      "rego": "package k8sdenyhostpidprivileged\n\nviolation[{\"msg\": msg}] {\n  input.review.kind.kind == \"Pod\"\n  input.review.object.spec.hostPID == true\n  msg := \"Using hostPID is not allowed.\"\n}\n\nviolation[{\"msg\": msg}] {\n  input.review.kind.kind == \"Pod\"\n  container := input.review.object.spec.containers[_]\n  container.securityContext.privileged == true\n  msg := \"Privileged containers are not allowed.\"\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string",
                                  "shortNames": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "validation": [
                                "object",
                                {
                                  "legacySchema": "bool",
                                  "openAPIV3Schema": "dynamic"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "code": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "engine": "string",
                                      "source": "dynamic"
                                    }
                                  ]
                                ]
                              ],
                              "libs": [
                                "list",
                                "string"
                              ],
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_template_privilegeescalation.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "name": "k8sdenyprivilegeescalation"
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenyPrivilegeEscalation"
                      }
                    }
                  },
                  "targets": [
                    {
                      "rego": "package k8sdenyprivilegeescalation\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  container.securityContext.allowPrivilegeEscalation == true\n  msg := sprintf(\"Privilege escalation is not allowed. Container: %v\", [container.name])\n}\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  initContainer.securityContext.allowPrivilegeEscalation == true\n  msg := sprintf(\"Privilege escalation is not allowed. InitContainer: %v\", [initContainer.name])\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8sdenyprivilegeescalation",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenyPrivilegeEscalation",
                        "shortNames": null
                      },
                      "validation": {
                        "legacySchema": true,
                        "openAPIV3Schema": null
                      }
                    }
                  },
                  "targets": [
                    {
                      "code": null,
                      "libs": null,
                      "rego": "package k8sdenyprivilegeescalation\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  container.securityContext.allowPrivilegeEscalation == true\n  msg := sprintf(\"Privilege escalation is not allowed. Container: %v\", [container.name])\n}\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  initContainer.securityContext.allowPrivilegeEscalation == true\n  msg := sprintf(\"Privilege escalation is not allowed. InitContainer: %v\", [initContainer.name])\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string",
                                  "shortNames": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "validation": [
                                "object",
                                {
                                  "legacySchema": "bool",
                                  "openAPIV3Schema": "dynamic"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "code": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "engine": "string",
                                      "source": "dynamic"
                                    }
                                  ]
                                ]
                              ],
                              "libs": [
                                "list",
                                "string"
                              ],
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_template_readonlyrootaccess.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "name": "k8senforcereadonlyrootfilesystem"
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sEnforceReadOnlyRootFilesystem"
                      }
                    }
                  },
                  "targets": [
                    {
                      "rego": "package k8senforcereadonlyrootfilesystem\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  not container.securityContext.readOnlyRootFilesystem\n  msg := sprintf(\"Containers must run with a read-only root filesystem. Container: %v\", [container.name])\n}\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  not initContainer.securityContext.readOnlyRootFilesystem\n  msg := sprintf(\"InitContainers must run with a read-only root filesystem. InitContainer: %v\", [initContainer.name])\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8senforcereadonlyrootfilesystem",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sEnforceReadOnlyRootFilesystem",
                        "shortNames": null
                      },
                      "validation": {
                        "legacySchema": true,
                        "openAPIV3Schema": null
                      }
                    }
                  },
                  "targets": [
                    {
                      "code": null,
                      "libs": null,
                      "rego": "package k8senforcereadonlyrootfilesystem\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  not container.securityContext.readOnlyRootFilesystem\n  msg := sprintf(\"Containers must run with a read-only root filesystem. Container: %v\", [container.name])\n}\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  not initContainer.securityContext.readOnlyRootFilesystem\n  msg := sprintf(\"InitContainers must run with a read-only root filesystem. InitContainer: %v\", [initContainer.name])\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string",
                                  "shortNames": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "validation": [
                                "object",
                                {
                                  "legacySchema": "bool",
                                  "openAPIV3Schema": "dynamic"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "code": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "engine": "string",
                                      "source": "dynamic"
                                    }
                                  ]
                                ]
                              ],
                              "libs": [
                                "list",
                                "string"
                              ],
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_template_seccomp.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "name": "k8sseccomp"
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sSeccomp"
                      }
                    }
                  },
                  "targets": [
                    {
                      "rego": "package k8sseccomp\n\nviolation[{\"msg\": msg}] {\n  input.review.kind.kind == \"Pod\"\n  not seccomp_enabled(input.review.object)\n  msg := \"Seccomp must be enabled for all pods.\"\n}\n\nviolation[{\"msg\": msg}] {\n  input.review.kind.kind == \"Pod\"\n  container := input.review.object.spec.initContainers[_]\n  not seccomp_enabled(container)\n  msg := \"Seccomp must be enabled for all initContainers.\"\n}\n\nviolation[{\"msg\": msg}] {\n  input.review.kind.kind == \"Pod\"\n  container := input.review.object.spec.containers[_]\n  not seccomp_enabled(container)\n  msg := \"Seccomp must be enabled for all containers.\"\n}\n\nseccomp_enabled(obj) {\n  obj.metadata.annotations[\"seccomp.security.alpha.kubernetes.io/pod\"]\n}\n\nseccomp_enabled(container) {\n  container.securityContext.seccompProfile.type\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8sseccomp",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sSeccomp",
                        "shortNames": null
                      },
                      "validation": {
                        "legacySchema": true,
                        "openAPIV3Schema": null
                      }
                    }
                  },
                  "targets": [
                    {
                      "code": null,
                      "libs": null,
                      "rego": "package k8sseccomp\n\nviolation[{\"msg\": msg}] {\n  input.review.kind.kind == \"Pod\"\n  not seccomp_enabled(input.review.object)\n  msg := \"Seccomp must be enabled for all pods.\"\n}\n\nviolation[{\"msg\": msg}] {\n  input.review.kind.kind == \"Pod\"\n  container := input.review.object.spec.initContainers[_]\n  not seccomp_enabled(container)\n  msg := \"Seccomp must be enabled for all initContainers.\"\n}\n\nviolation[{\"msg\": msg}] {\n  input.review.kind.kind == \"Pod\"\n  container := input.review.object.spec.containers[_]\n  not seccomp_enabled(container)\n  msg := \"Seccomp must be enabled for all containers.\"\n}\n\nseccomp_enabled(obj) {\n  obj.metadata.annotations[\"seccomp.security.alpha.kubernetes.io/pod\"]\n}\n\nseccomp_enabled(container) {\n  container.securityContext.seccompProfile.type\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string",
                                  "shortNames": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "validation": [
                                "object",
                                {
                                  "legacySchema": "bool",
                                  "openAPIV3Schema": "dynamic"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "code": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "engine": "string",
                                      "source": "dynamic"
                                    }
                                  ]
                                ]
                              ],
                              "libs": [
                                "list",
                                "string"
                              ],
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        },
        {
          "index_key": "constraint_template_selinux.yaml",
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "name": "k8sdenyselinux"
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenySELinux"
                      }
                    }
                  },
                  "targets": [
                    {
                      "rego": "package k8sdenyselinux\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  container.securityContext.seLinuxOptions\n  msg := sprintf(\"SELinux options are not allowed in container %v\", [container.name])\n}\n\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  initContainer.securityContext.seLinuxOptions\n  msg := sprintf(\"SELinux options are not allowed in init container %v\", [initContainer.name])\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "templates.gatekeeper.sh/v1beta1",
                "kind": "ConstraintTemplate",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8sdenyselinux",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "crd": {
                    "spec": {
                      "names": {
                        "kind": "K8sDenySELinux",
                        "shortNames": null
                      },
                      "validation": {
                        "legacySchema": true,
                        "openAPIV3Schema": null
                      }
                    }
                  },
                  "targets": [
                    {
                      "code": null,
                      "libs": null,
                      "rego": "package k8sdenyselinux\n\nviolation[{\"msg\": msg}] {\n  container := input.review.object.spec.containers[_]\n  container.securityContext.seLinuxOptions\n  msg := sprintf(\"SELinux options are not allowed in container %v\", [container.name])\n}\n\nviolation[{\"msg\": msg}] {\n  initContainer := input.review.object.spec.initContainers[_]\n  initContainer.securityContext.seLinuxOptions\n  msg := sprintf(\"SELinux options are not allowed in init container %v\", [initContainer.name])\n}\n",
                      "target": "admission.k8s.gatekeeper.sh"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "crd": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "names": [
                                "object",
                                {
                                  "kind": "string",
                                  "shortNames": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "validation": [
                                "object",
                                {
                                  "legacySchema": "bool",
                                  "openAPIV3Schema": "dynamic"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "targets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "code": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "engine": "string",
                                      "source": "dynamic"
                                    }
                                  ]
                                ]
                              ],
                              "libs": [
                                "list",
                                "string"
                              ],
                              "rego": "string",
                              "target": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.local_file.gatekeeper_templates",
            "helm_release.gatekeeper",
            "helm_release.prometheus",
            "kubernetes_namespace.gatekeeper",
            "kubernetes_namespace.prometheus",
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "gatekeeper",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "gatekeeper-system",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "gatekeeper-system",
                "resource_version": "6956",
                "uid": "185306d4-487b-44c2-afa6-d185d1ab6c7c"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "monitoring",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "monitoring",
                "resource_version": "4682",
                "uid": "609da2df-fe8c-4062-b09a-4573bc5babfa"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_access_policy_association.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "219872127195",
            "arn": "arn:aws:sts::219872127195:assumed-role/tfrole/aws-go-sdk-1721176892108355600",
            "id": "219872127195",
            "user_id": "AROATGMLGNDNVZGBA6VC7:aws-go-sdk-1721176892108355600"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:sts::219872127195:assumed-role/tfrole/aws-go-sdk-1721176892108355600",
            "id": "arn:aws:sts::219872127195:assumed-role/tfrole/aws-go-sdk-1721176892108355600",
            "issuer_arn": "arn:aws:iam::219872127195:role/tfrole",
            "issuer_id": "AROATGMLGNDNVZGBA6VC7",
            "issuer_name": "tfrole",
            "session_name": "aws-go-sdk-1721176892108355600"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificates": [
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "not_after": "2034-06-28T17:39:16Z",
                "not_before": "2009-09-02T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "12037640545166866303",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "not_after": "2037-12-31T01:00:00Z",
                "not_before": "2015-05-25T12:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "144918191876577076464031512351042010504348870",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSSkvL1E7HtTvq8ZSELToPoTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjUzMFoXDTMwMDgyMzIyMjUzMFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALtDGMZa\nqHneKei1by6+pUPPLljTB143Si6VpEWPc6mSkFhZb/6qrkZyoHlQLbDYnI2D7hD0\nsdzEqfnuAjIsuXQLG3A8TvX6V3oFNBFVe8NlLJHvBseKY88saLwufxkZVwk74g4n\nWlNMXzla9Y5F3wwRHwMVH443xGz6UtGSZSqQ94eFx5X7Tlqt8whi8qCaKdZ5rNak\n+r9nUThOeClqFd4oXych//Rc7Y0eX1KNWHYSI1Nk31mYgiK3JvH063g+K9tHA63Z\neTgKgndlh+WI+zv7i44HepRZjA1FYwYZ9Vv/9UkC5Yz8/yU65fgjaE+wVHM4e/Yy\nC2osrPWE7gJ+dXMCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUwDFSzVpQw4J8dHHOy+mc+XrrguIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAtTi6Fs0Azfi+iwm7jrz+CSxHH+uHl7Law3MQSXVtR8RV53PtR6r/6gNpqlzdo\nZq4FKbADi1v9Bun8RY8D51uedRfjsbeodizeBB8nXmeyD33Ep7VATj4ozcd31YFV\nfgRhvTSxNrrTlNpWkUk0m3BMPv8sg381HhA6uEYokE5q9uws/3YkKqRiEz3TsaWm\nJqIRZhMbgAfp7O7FUwFIb7UIspogZSKxPIWJpxiPo3TcBambbVtQOcNRWz5qCQdD\nslI2yayq0n2TXoHyNCLEH8rpsJRVILFsg0jc7BaFrMnF462+ajSehgj12IidNeRN\n4zl+EoNaWdpnWndvSpAEkq2P\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "not_after": "2030-08-23T22:25:30Z",
                "not_before": "2022-08-23T22:25:30Z",
                "public_key_algorithm": "RSA",
                "serial_number": "166129353110899469622597955040406457904926625",
                "sha1_fingerprint": "414a2060b738c635cc7fc243e052615592830c53",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon RSA 2048 M02,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF5TCCBM2gAwIBAgIQCJL9XGbawpZ6IsGGvDqdyDANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAyMB4XDTI0MDMyODAwMDAwMFoXDTI1MDQyNjIzNTk1OVowKDEm\nMCQGA1UEAwwdKi5la3MudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20wggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC4iVpgxjgOmMKdC2tYTHa9yzuuLdYCjpC6\nxN1VgI71uTiSxUGf6R3N/Rdk5vjz2COu3fsVgMh6cCpqrPlxU/5uP0/DFfQGdVxB\nbZ4vYRC9jIbgyKmwqOEJMD/9B3iGHz3KpBpnXDcuulqWsCtuuqxjnMLL4h1UdOeA\nPNwhOyQxKMHl+LfrCZeCuehKch+XM/8lhdKgYyLp8o1Nm7IsNG1aN6iNoZ6rxEyU\nVw6fV+pZDaIrxkYf7unQrAfUWR122pXGzWRtv5VGZLjrci8ev4ZpgGViIzb2LOqT\nFm8gde6aURlAm4uMDFzmZ/iOqEV+52vO9Z0E6Yo5M3dJZqQo7uUpAgMBAAGjggL1\nMIIC8TAfBgNVHSMEGDAWgBTAMVLNWlDDgnx0cc7L6Zz5euuC4jAdBgNVHQ4EFgQU\nhG1ZDKa76htLZVXP+E3P3GnYHjEwKAYDVR0RBCEwH4IdKi5la3MudXMtZWFzdC0x\nLmFtYXpvbmF3cy5jb20wEwYDVR0gBAwwCjAIBgZngQwBAgEwDgYDVR0PAQH/BAQD\nAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCg\nLqAshipodHRwOi8vY3JsLnIybTAyLmFtYXpvbnRydXN0LmNvbS9yMm0wMi5jcmww\ndQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5yMm0wMi5h\nbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJtMDIuYW1h\nem9udHJ1c3QuY29tL3IybTAyLmNlcjAMBgNVHRMBAf8EAjAAMIIBfQYKKwYBBAHW\neQIEAgSCAW0EggFpAWcAdgDPEVbu1S58r/OHW9lpLpvpGnFnSrAX7KwB0lt3zsw7\nCAAAAY6HAoTcAAAEAwBHMEUCIHI392+k5Ds777nM4CwNr+xjjCr49CQ/vHIJDZJX\nokM7AiEA++VPDyyMLijPy0GR8ZBIvAcrYbjfJXTF3GkizeJLVJIAdgB9WR4S4Xgq\nexxhZ3xe/fjQh1wUoE6VnrkDL9kOjC55uAAAAY6HAoTeAAAEAwBHMEUCICBkhMaf\n9gdR3bCbLxXFbHNEXUh7t3P/SxaUKDcE6UmIAiEA25zZ9aBt/mrhDcMc155V8qnw\nadTEqttLdP4XMEmMsPAAdQDm0jFjQHeMwRBBBtdxuc7B0kD2loSG+7qHMh39HjeO\nUAAAAY6HAoTxAAAEAwBGMEQCIFFF4kpqcNgHFzRi2cnL4HbNApZlnlc+Re9IyYXi\nCldqAiBkZUgs12iu2uWGU97VUAICt2+zZkhjUV3i+O3kYh1yrTANBgkqhkiG9w0B\nAQsFAAOCAQEAWY5OxR7rWtYFS09xAYYIHlBF7wdUxQH60zi/IqAHZIRCFI1xHdsJ\n0BUv30lLyiGtVr4DheBo81/IErBRpXmSkdoDJA+5d/Jz3EFtbrVogjESALAgBfSG\nuJX0QLshjyTl9O2r00qkxIhbKmSPSl9JQVxqt2jTaB6pD3SjWX6U+l397Ns1L6pI\nb1418oVo7LeHwEeEx6APMIyjzlfcXdCHA6lVKeiNF8SH+QW+h6ZOpGXJIU6llBjg\nWAhscqrGRj1APpuKWGVkVCweAjIOcEuWV8Fqmfp1h9jmeUkG6SoBifrl41PvhK0o\nqQ3LlAF6Op6n7JLa2rlXkf6LienZDVlSuQ==\n-----END CERTIFICATE-----\n",
                "is_ca": false,
                "issuer": "CN=Amazon RSA 2048 M02,O=Amazon,C=US",
                "not_after": "2025-04-26T23:59:59Z",
                "not_before": "2024-03-28T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "11397038078078022747295509550808604104",
                "sha1_fingerprint": "9451ad2b53c7f41fab22886cc07d482085336561",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=*.eks.us-east-1.amazonaws.com",
                "version": 3
              }
            ],
            "content": null,
            "id": "99d41e43229a4cdaf4141f3e8310e6d95c31dab9",
            "url": "https://oidc.eks.us-east-1.amazonaws.com/id/2DD8DFF6A43AE80D9E069B344F20C889",
            "verify_chain": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:219872127195:log-group:/aws/eks/myOPAproject_v02/cluster",
            "id": "/aws/eks/myOPAproject_v02/cluster",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/eks/myOPAproject_v02/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/myOPAproject_v02/cluster"
            },
            "tags_all": {
              "Name": "/aws/eks/myOPAproject_v02/cluster"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_eks_access_entry",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster_creator",
          "schema_version": 0,
          "attributes": {
            "access_entry_arn": "arn:aws:eks:us-east-1:219872127195:access-entry/myOPAproject_v02/role/219872127195/tfrole/d6c85f02-eede-0867-7d60-1dbcdd25a30f",
            "cluster_name": "myOPAproject_v02",
            "created_at": "2024-07-17T00:09:33Z",
            "id": "myOPAproject_v02:arn:aws:iam::219872127195:role/tfrole",
            "kubernetes_groups": [],
            "modified_at": "2024-07-17T00:09:33Z",
            "principal_arn": "arn:aws:iam::219872127195:role/tfrole",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "type": "STANDARD",
            "user_name": "arn:aws:sts::219872127195:assumed-role/tfrole/{{SessionName}}"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_eks_access_policy_association",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster_creator_admin",
          "schema_version": 0,
          "attributes": {
            "access_scope": [
              {
                "namespaces": [],
                "type": "cluster"
              }
            ],
            "associated_at": "2024-07-17 00:09:34.94 +0000 UTC",
            "cluster_name": "myOPAproject_v02",
            "id": "myOPAproject_v02#arn:aws:iam::219872127195:role/tfrole#arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
            "modified_at": "2024-07-17 00:09:34.94 +0000 UTC",
            "policy_arn": "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
            "principal_arn": "arn:aws:iam::219872127195:role/tfrole",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_access_entry.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": false
              }
            ],
            "arn": "arn:aws:eks:us-east-1:219872127195:cluster/myOPAproject_v02",
            "bootstrap_self_managed_addons": true,
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQTNNM1JCQWRmczR3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBM01UWXlNelU1TVRsYUZ3MHpOREEzTVRVd01EQTBNVGxhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM1bXZSZ0VMV1A5cVdSTkRhdWEwYllGRWRxdWZPOCs5QWhLY2dqNUM3bUFrUzNhM3ZRcnJkWm5BUWMKekxZNzE0QmhVZ1MzL1BaTTFVUFhLV25lRWIxL0JoeGd1KzQwN04xUDFyVnB6bGJPVUNuUGdLUXVla0JUUmJBQQpJTVM4OUVoWUczWEc2aFFsQVkwUnR2TVplT2ZzRjJuWnJqZk56dy9WTDV4N09EaXJFZVRDRGx0ZkVCeWRRanVIClg4SURPRHFkUndMN25HU0kwaENab0h1TmE4K1h6Z20yMUhVang4TWpWVVdweVRrY3RqSFpPSWowbjVOa2JzVnAKZnR3V3JtTlFJVXZQaFdLRHJOWWx6STFrR2p4TUxZYTZvVXE3YTh2cVJaQVJMMkY4MmNKamdoaFh6bm00NFBKMApjR0prWFVLYUM2WFFyc2RBTzBhSk8wUzlrdDh2QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTdjcyM2dibTdzYVVoYzVsUWprYXNnTUxYanRUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQi9ld0NSbmRPcgp1RFZ4V1JzRlo3ZjVqZjdEcWtTQUVXZXovU2ZsdURzMk5GOU9tQndzbXk4TFZSTHIxYnQxRkFsbHIrbG91VmdWCldsRHZwMmM0NndtTjg2cHdVOWVZZkp0N3JXMGFIV2x1MExNaFNhQmZuU0tsUWJLM2JNQkV4QlU3REp2VTJ4UTgKU0szSDN0SUNGTnpLaUh1NzFOc3RvZDdqVW1RWlRvS2ZzTVRuMjdscnlqVGFmRGJSRnQxdEtOTHR1ZkpULzZQYwowZXl4MXcyR0tBSnU5U09zekFsMXVlN1p4ejdwZnp2cG1QVlN3VjE5N0N3ZjMwR0k5SWdZVUVRQ0F1Y2pIUW9aCnFMa0ZFL1pVazJ2ZWExZklVa0N5R1RkamNGVCtLL0t5WmdMVkpXZjdTR1pwdDlqVG93dnZoRFRFQnJQTDF2RXAKWC9ONEVYSWYvcEZOCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-07-16 23:59:24.943 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:us-east-1:219872127195:key/c873350f-9d7f-4eb6-8341-26bcafdae154"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://2DD8DFF6A43AE80D9E069B344F20C889.sk1.us-east-1.eks.amazonaws.com",
            "id": "myOPAproject_v02",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/2DD8DFF6A43AE80D9E069B344F20C889"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "10.100.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "myOPAproject_v02",
            "outpost_config": [],
            "platform_version": "eks.10",
            "role_arn": "arn:aws:iam::219872127195:role/eksrole",
            "status": "ACTIVE",
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "version": "1.29",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-08d8e79c070d5f5fb",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0f25af21daaa0b2b9"
                ],
                "subnet_ids": [
                  "subnet-2e3a8c75",
                  "subnet-c0335f89"
                ],
                "vpc_id": "vpc-2f1fee49"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::219872127195:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/2DD8DFF6A43AE80D9E069B344F20C889",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::219872127195:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/2DD8DFF6A43AE80D9E069B344F20C889",
            "tags": {
              "Name": "myOPAproject_v02-eks-irsa"
            },
            "tags_all": {
              "Name": "myOPAproject_v02-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-east-1.amazonaws.com/id/2DD8DFF6A43AE80D9E069B344F20C889"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.data.tls_certificate.this",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::219872127195:policy/eks-cluster-encryption-policy",
            "attachment_count": 1,
            "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
            "id": "arn:aws:iam::219872127195:policy/eks-cluster-encryption-policy",
            "name": "eks-cluster-encryption-policy",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-1:219872127195:key/c873350f-9d7f-4eb6-8341-26bcafdae154\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPATGMLGNDNY7NIRWK72",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.EKS.aws_iam_role.this",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::219872127195:role/eksrole",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-07-16T23:59:14Z",
            "description": "role for eks project",
            "force_detach_policies": true,
            "id": "eksrole",
            "inline_policy": [
              {
                "name": "eksrole",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::219872127195:policy/eks-cluster-encryption-policy",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "eksrole",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROATGMLGNDNSOTLJGNQB"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.EKS.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "eksrole-20240716235915301100000008",
            "policy_arn": "arn:aws:iam::219872127195:policy/eks-cluster-encryption-policy",
            "role": "eksrole"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.EKS.aws_iam_policy.cluster_encryption",
            "module.EKS.aws_iam_role.this",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSClusterPolicy",
          "schema_version": 0,
          "attributes": {
            "id": "eksrole-20240716235915016600000007",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "eksrole"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.EKS.aws_iam_role.this",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSVPCResourceController",
          "schema_version": 0,
          "attributes": {
            "id": "eksrole-20240716235914982300000006",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "eksrole"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.EKS.aws_iam_role.this",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:219872127195:security-group/sg-0f25af21daaa0b2b9",
            "description": "EKS cluster security group",
            "egress": [],
            "id": "sg-0f25af21daaa0b2b9",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-07766d61068395207"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "eks-cluster-sg-20240716235914020000000001",
            "name_prefix": "eks-cluster-sg-",
            "owner_id": "219872127195",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-cluster-sg"
            },
            "tags_all": {
              "Name": "eks-cluster-sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-2f1fee49"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:219872127195:security-group/sg-07766d61068395207",
            "description": "EKS node shared security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all egress",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-07766d61068395207",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 4443/tcp webhook",
                "from_port": 4443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0f25af21daaa0b2b9"
                ],
                "self": false,
                "to_port": 4443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 6443/tcp webhook",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0f25af21daaa0b2b9"
                ],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 8443/tcp webhook",
                "from_port": 8443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0f25af21daaa0b2b9"
                ],
                "self": false,
                "to_port": 8443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 9443/tcp webhook",
                "from_port": 9443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0f25af21daaa0b2b9"
                ],
                "self": false,
                "to_port": 9443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0f25af21daaa0b2b9"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0f25af21daaa0b2b9"
                ],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS UDP",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node ingress on ephemeral ports",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 65535
              }
            ],
            "name": "eks-nodegrp-sg-20240716235914020000000002",
            "name_prefix": "eks-nodegrp-sg-",
            "owner_id": "219872127195",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-nodegrp-sg",
              "kubernetes.io/cluster/myOPAproject_v02": "owned"
            },
            "tags_all": {
              "Name": "eks-nodegrp-sg",
              "kubernetes.io/cluster/myOPAproject_v02": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-2f1fee49"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ingress_nodes_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node groups to cluster API",
            "from_port": 443,
            "id": "sgrule-1253938193",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0f25af21daaa0b2b9",
            "security_group_rule_id": "sgr-078efdf1cbb1e780c",
            "self": false,
            "source_security_group_id": "sg-07766d61068395207",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "egress_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow all egress",
            "from_port": 0,
            "id": "sgrule-4164045198",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-07766d61068395207",
            "security_group_rule_id": "sgr-0c04ac4d40ad69eeb",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node groups",
            "from_port": 443,
            "id": "sgrule-1729200167",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-07766d61068395207",
            "security_group_rule_id": "sgr-07e146aee07812da6",
            "self": false,
            "source_security_group_id": "sg-0f25af21daaa0b2b9",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_4443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 4443/tcp webhook",
            "from_port": 4443,
            "id": "sgrule-3187167189",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-07766d61068395207",
            "security_group_rule_id": "sgr-01a6be768937ee998",
            "self": false,
            "source_security_group_id": "sg-0f25af21daaa0b2b9",
            "timeouts": null,
            "to_port": 4443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_6443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 6443/tcp webhook",
            "from_port": 6443,
            "id": "sgrule-1958357059",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-07766d61068395207",
            "security_group_rule_id": "sgr-0a73a106b66f7d9c0",
            "self": false,
            "source_security_group_id": "sg-0f25af21daaa0b2b9",
            "timeouts": null,
            "to_port": 6443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_8443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 8443/tcp webhook",
            "from_port": 8443,
            "id": "sgrule-1743131746",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-07766d61068395207",
            "security_group_rule_id": "sgr-0036f8ae2418cb9b0",
            "self": false,
            "source_security_group_id": "sg-0f25af21daaa0b2b9",
            "timeouts": null,
            "to_port": 8443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_9443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 9443/tcp webhook",
            "from_port": 9443,
            "id": "sgrule-54994857",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-07766d61068395207",
            "security_group_rule_id": "sgr-0dfedcd3f9fbb053b",
            "self": false,
            "source_security_group_id": "sg-0f25af21daaa0b2b9",
            "timeouts": null,
            "to_port": 9443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_kubelet",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node kubelets",
            "from_port": 10250,
            "id": "sgrule-734994092",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-07766d61068395207",
            "security_group_rule_id": "sgr-0a95479641f550053",
            "self": false,
            "source_security_group_id": "sg-0f25af21daaa0b2b9",
            "timeouts": null,
            "to_port": 10250,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node ingress on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-62052062",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-07766d61068395207",
            "security_group_rule_id": "sgr-048394aa49aaa955c",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS",
            "from_port": 53,
            "id": "sgrule-2110174527",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-07766d61068395207",
            "security_group_rule_id": "sgr-0e498fb3cdec64fe8",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_udp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS UDP",
            "from_port": 53,
            "id": "sgrule-3650688720",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "udp",
            "security_group_id": "sg-07766d61068395207",
            "security_group_rule_id": "sgr-0c024d49b9628c077",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2024-07-17T00:10:03Z",
            "triggers": {
              "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQTNNM1JCQWRmczR3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBM01UWXlNelU1TVRsYUZ3MHpOREEzTVRVd01EQTBNVGxhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM1bXZSZ0VMV1A5cVdSTkRhdWEwYllGRWRxdWZPOCs5QWhLY2dqNUM3bUFrUzNhM3ZRcnJkWm5BUWMKekxZNzE0QmhVZ1MzL1BaTTFVUFhLV25lRWIxL0JoeGd1KzQwN04xUDFyVnB6bGJPVUNuUGdLUXVla0JUUmJBQQpJTVM4OUVoWUczWEc2aFFsQVkwUnR2TVplT2ZzRjJuWnJqZk56dy9WTDV4N09EaXJFZVRDRGx0ZkVCeWRRanVIClg4SURPRHFkUndMN25HU0kwaENab0h1TmE4K1h6Z20yMUhVang4TWpWVVdweVRrY3RqSFpPSWowbjVOa2JzVnAKZnR3V3JtTlFJVXZQaFdLRHJOWWx6STFrR2p4TUxZYTZvVXE3YTh2cVJaQVJMMkY4MmNKamdoaFh6bm00NFBKMApjR0prWFVLYUM2WFFyc2RBTzBhSk8wUzlrdDh2QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTdjcyM2dibTdzYVVoYzVsUWprYXNnTUxYanRUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQi9ld0NSbmRPcgp1RFZ4V1JzRlo3ZjVqZjdEcWtTQUVXZXovU2ZsdURzMk5GOU9tQndzbXk4TFZSTHIxYnQxRkFsbHIrbG91VmdWCldsRHZwMmM0NndtTjg2cHdVOWVZZkp0N3JXMGFIV2x1MExNaFNhQmZuU0tsUWJLM2JNQkV4QlU3REp2VTJ4UTgKU0szSDN0SUNGTnpLaUh1NzFOc3RvZDdqVW1RWlRvS2ZzTVRuMjdscnlqVGFmRGJSRnQxdEtOTHR1ZkpULzZQYwowZXl4MXcyR0tBSnU5U09zekFsMXVlN1p4ejdwZnp2cG1QVlN3VjE5N0N3ZjMwR0k5SWdZVUVRQ0F1Y2pIUW9aCnFMa0ZFL1pVazJ2ZWExZklVa0N5R1RkamNGVCtLL0t5WmdMVkpXZjdTR1pwdDlqVG93dnZoRFRFQnJQTDF2RXAKWC9ONEVYSWYvcEZOCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
              "cluster_endpoint": "https://2DD8DFF6A43AE80D9E069B344F20C889.sk1.us-east-1.eks.amazonaws.com",
              "cluster_name": "myOPAproject_v02",
              "cluster_service_cidr": "10.100.0.0/16",
              "cluster_version": "1.29"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS.module.eks_managed_node_group[\"default_node_group\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "219872127195",
            "arn": "arn:aws:sts::219872127195:assumed-role/tfrole/aws-go-sdk-1721176892108355600",
            "id": "219872127195",
            "user_id": "AROATGMLGNDNVZGBA6VC7:aws-go-sdk-1721176892108355600"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.EKS.module.eks_managed_node_group[\"default_node_group\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.EKS.module.eks_managed_node_group[\"default_node_group\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.EKS.module.eks_managed_node_group[\"default_node_group\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:us-east-1:219872127195:nodegroup/myOPAproject_v02/worker-nodegrp-1/b4c85f03-2966-ea35-24d4-8c7f116a721f",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "myOPAproject_v02",
            "disk_size": 30,
            "force_update_version": null,
            "id": "myOPAproject_v02:worker-nodegrp-1",
            "instance_types": [
              "t3.medium"
            ],
            "labels": {},
            "launch_template": [],
            "node_group_name": "worker-nodegrp-1",
            "node_group_name_prefix": "",
            "node_role_arn": "arn:aws:iam::219872127195:role/eksnode-role",
            "release_version": "1.29.3-20240703",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-worker-nodegrp-1-b4c85f03-2966-ea35-24d4-8c7f116a721f"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 2,
                "min_size": 1
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-2e3a8c75",
              "subnet-c0335f89"
            ],
            "tags": {
              "Name": "worker-nodegrp-1"
            },
            "tags_all": {
              "Name": "worker-nodegrp-1"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 33
              }
            ],
            "version": "1.29"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.eks_managed_node_group.aws_iam_role.this",
            "module.EKS.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.EKS.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.EKS.module.eks_managed_node_group.aws_launch_template.this",
            "module.EKS.module.eks_managed_node_group.aws_placement_group.this",
            "module.EKS.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.EKS.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.EKS.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.EKS.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.module.eks_managed_node_group.data.aws_partition.current",
            "module.EKS.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.EKS.module.eks_managed_node_group.data.aws_subnets.efa",
            "module.EKS.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.EKS.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current",
            "module.EKS.time_sleep.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS.module.eks_managed_node_group[\"default_node_group\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::219872127195:role/eksnode-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-07-16T23:59:14Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "eksnode-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "eksnode-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROATGMLGNDNUOOS5VRYS"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.EKS.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS.module.eks_managed_node_group[\"default_node_group\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "eksnode-role-20240716235914691800000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "eksnode-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.EKS.module.eks_managed_node_group.aws_iam_role.this",
            "module.EKS.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.EKS.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "eksnode-role-20240716235914793500000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "eksnode-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.EKS.module.eks_managed_node_group.aws_iam_role.this",
            "module.EKS.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.EKS.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "eksnode-role-20240716235914679200000003",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "eksnode-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.EKS.module.eks_managed_node_group.aws_iam_role.this",
            "module.EKS.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.EKS.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.EKS.module.eks_managed_node_group[\"default_node_group\"].module.user_data",
      "mode": "managed",
      "type": "null_resource",
      "name": "validate_cluster_service_cidr",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "7280083303470235399",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.EKS.aws_cloudwatch_log_group.this",
            "module.EKS.aws_eks_cluster.this",
            "module.EKS.aws_iam_policy.cni_ipv6_policy",
            "module.EKS.aws_iam_role.this",
            "module.EKS.aws_iam_role_policy_attachment.this",
            "module.EKS.aws_security_group.cluster",
            "module.EKS.aws_security_group.node",
            "module.EKS.aws_security_group_rule.cluster",
            "module.EKS.aws_security_group_rule.node",
            "module.EKS.data.aws_caller_identity.current",
            "module.EKS.data.aws_iam_policy_document.assume_role_policy",
            "module.EKS.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.EKS.data.aws_iam_session_context.current",
            "module.EKS.data.aws_partition.current",
            "module.EKS.module.kms.aws_kms_external_key.this",
            "module.EKS.module.kms.aws_kms_key.this",
            "module.EKS.module.kms.aws_kms_replica_external_key.this",
            "module.EKS.module.kms.aws_kms_replica_key.this",
            "module.EKS.module.kms.data.aws_caller_identity.current",
            "module.EKS.module.kms.data.aws_iam_policy_document.this",
            "module.EKS.module.kms.data.aws_partition.current",
            "module.EKS.time_sleep.this"
          ]
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "module.EKS.module.self_managed_node_group.var.platform",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.EKS.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.EKS.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.EKS.module.eks_managed_node_group[\"default_node_group\"].module.user_data.null_resource.validate_cluster_service_cidr",
          "status": "pass"
        }
      ]
    }
  ]
}
